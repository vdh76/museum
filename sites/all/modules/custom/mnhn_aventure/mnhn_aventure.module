<?php
// $Id$




///////////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////////


/**
 * Implementation of hook_node_view().
 */
function mnhn_aventure_node_view(&$node, $view_mode, $langcode) {
	global $language;
	if($node->type=='aventure'){
		
		$breacrumb=array();
		$breacrumb[]=l(t('Home'), '');
		$breacrumb[]=l(t('Exhibitions'), 'expositions');
		
		drupal_set_breadcrumb($breacrumb);
	}
}



/**
 * Implementation of hook_theme()
 */
function mnhn_aventure_theme(){
	return array(
		
	
	
	'aventure_edito' => array(
			'variables' => array(),
     		'template' => 'aventure_edito'),
	
	'aventure_expo' => array(
			'variables' => array(),
     		'template' => 'aventure_expo'),
	
	'aventure_abeilles' => array(
			'variables' => array(),
     		'template' => 'aventure_abeilles'),
	
	'aventure_collections' => array(
			'variables' => array(),
     		'template' => 'aventure_collections'),
	
	'aventure_anniversaire' => array(
			'variables' => array(),
     		'template' => 'aventure_anniversaire'),
	
	'aventure' => array(
			'variables' => array('nid_aventure' => NULL),
     		'template' => 'aventure'),
	);	
	
}	



/**
 * Implementation of hook_menu().
 */
function mnhn_aventure_menu() {
	
	 
 
   $items['aventure-code'] = array(
    'access arguments' => array('access content'), // or whatever permission you want
    'page callback' => 'mnhn_aventure_code_secret',
    'type' => MENU_CALLBACK
  );
 
  
   $items['aventure-museum'] = array(
    'title' => 'Aventure Muséum',
    'access arguments' => array('access content'), // or whatever permission you want
    'page callback' => 'mnhn_aventure_museum',
    'type' => MENU_CALLBACK
  );
  
  
  $items['admin/mhnh/aventure'] = array(
    'title' => 'Aventure',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_aventure_admin_settings'),
    'access arguments' => array('mnhn'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mnhn_aventure_admin.inc',
     'weight' => 4,
  );
  
   $items['mnhn-aventure/autocomplete/link'] = array(
    'page callback' => 'mnhn_aventure_autocomplete_link',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  
  
 
   
  return $items;
}





///////////////////////////////////////////////////////////////////////////////////
// AVENTURE MUSEUM
///////////////////////////////////////////////////////////////////////////////////


/**
 * Aventure Museum
 * Chargement du noeud
 * aventure sélectionné dans le BO
 *
 * @return
 * html output
 *
 */
function mnhn_aventure_museum(){
	drupal_add_js(drupal_get_path('theme','mnhn').'/js/j-all.js');
	drupal_add_css(drupal_get_path('theme','mnhn').'/css/all.css');

	global $language;
	$link=variable_get('mnhn_aventure_link_'.$language->language, '');
	$nid_aventure=mnhn_content_autocomplete_nid($link);
	$output=theme('aventure',array('nid_aventure' => $nid_aventure));
	return $output;

}


/**
 * BO Champs autocompletion
 * Noeud aventure
 *
 * @return
 * json output
 *
 */
function mnhn_aventure_autocomplete_link($string = ''){

	global $language;
	$matches = array();

	// Some fantasy DB table which holds cities
	$query = db_select('node', 'n');

	// Select rows that match the string
	$return = $query
	->fields('n', array('nid','title'))
	->condition('n.status', '1')
	->condition('n.language', $language->language)
	->condition('n.title', '%' . db_like($string) . '%', 'LIKE')
	->condition('n.type', array('page','aventure'), 'IN')
	->range(0, 10)->execute();



	// add matches to $matches
	foreach ($return as $row) {
		$matches[$row->title.' ['.$row->nid.']'] = check_plain($row->title);
	}

	// return for JS
	drupal_json_output($matches);




}

/**
 * Verification AJAX
 * Code secret aventure
 * 
 * @param $nid
 *
 * @return
 * string
 *
 */
function mnhn_aventure_code_secret($nid){
	$code=$_POST['code'];
	$code_secret=db_query('SELECT field_aventure_code_value FROM field_data_field_aventure_code where entity_id=:nid',array(':nid'=>$nid))->fetchField();
	if(strtolower($code)==strtolower($code_secret) && !empty($code)){
		print 'ok';
	}

	exit;
}








///////////////////////////////////////////////////////////////////////////////////
// PREPROCESS
///////////////////////////////////////////////////////////////////////////////////
/**
 * Override or insert variables into the page templates.
 *
 * @param $variables
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
function mnhn_aventure_preprocess_html(&$variables, $hook) {
	
	
 	if(arg(0)=='aventure-museum'   ){
 		$variables['classes_array'][] = "page-aventure";
 	}
 	
 	$variables['classes'] = implode(' ', $variables['classes_array']);
 	
}








