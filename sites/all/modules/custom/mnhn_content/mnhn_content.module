<?php
// $Id$




define("RID_SUPERADMIN",3);
define("RID_EDITEUR",4);
define("RID_ADMIN",5);




//---Traduction des fields collection
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'mnhn_content') . '/field_collection_translation.inc';


switch($_SERVER["SERVER_NAME"]) {
	
  	case "museum.loc":
      define('CAPTCHA_PUBLIC','6Lc6PdoSAAAAAGBHGwmf4q8xZ28Hb9VXyjVDwLC2');
      define('CAPTCHA_PRIVATE','6Lc6PdoSAAAAAM-qlNw0czTPhkZBUuYzUmPIAiH7');
    	define("TID_CLASSEMENT_COLLECTION",51);
    	
    	define("MLID_COLLECTION_FR",1422);
    	define("MLID_COLLECTION_EN",1423);
    	define("MLID_COLLECTION_DE",2402);
    	
    	define("MLID_EXPOSITION_FR",544);
    	define("MLID_EXPOSITION_EN",900);
    	define("MLID_EXPOSITION_DE",2401);
    	
    	define("MLID_AGENDA_FR",545);
    	define("MLID_AGENDA_EN",894);
    	define("MLID_AGENDA_DE",2400);
    	
    	define("MLID_NUMERITHEQUE_FR",1252);
    	define("MLID_NUMERITHEQUE_EN",2379);
    	define("MLID_NUMERITHEQUE_DE",2403);
    	
    	define("MLID_BOUTIQUE_FR",1259);
    	define("MLID_BOUTIQUE_EN",2380);
    	define("MLID_BOUTIQUE_DE",2404);
    	
    	define("MLID_AVENTURE_FR",1263);
    	define("MLID_AVENTURE_EN",2381);
    	define("MLID_AVENTURE_DE",2405);
    
    break;
    
  	case "museum-lehavre.devr9.com";
	  	define('CAPTCHA_PUBLIC','6Lc6PdoSAAAAAGBHGwmf4q8xZ28Hb9VXyjVDwLC2');
	  	define('CAPTCHA_PRIVATE','6Lc6PdoSAAAAAM-qlNw0czTPhkZBUuYzUmPIAiH7');
	  	
	  	define("TID_CLASSEMENT_COLLECTION",64);
	  
	  	define("MLID_AGENDA_FR",545);
	  	define("MLID_AGENDA_EN",894);
	  	define("MLID_AGENDA_DE",2400);
	  	
	  	define("MLID_EXPOSITION_FR",544);
	  	define("MLID_EXPOSITION_EN",900);
	  	define("MLID_EXPOSITION_DE",2401);
	  	
	  	define("MLID_COLLECTION_FR",1422);
	  	define("MLID_COLLECTION_EN",1423);
	  	define("MLID_COLLECTION_DE",2402);
	  	
	  	define("MLID_NUMERITHEQUE_FR",1252);
	  	define("MLID_NUMERITHEQUE_EN",2379);
	  	define("MLID_NUMERITHEQUE_DE",2403);
	  	
	  	define("MLID_BOUTIQUE_FR",1259);
	  	define("MLID_BOUTIQUE_EN",2380);
	  	define("MLID_BOUTIQUE_DE",2404);
	  	
	  	define("MLID_AVENTURE_FR",1263);
	  	define("MLID_AVENTURE_EN",2381);
	  	define("MLID_AVENTURE_DE",2405);
	  	
	  	
  	break;
    
     case "preprod.museum-lehavre.fr":
     	define('CAPTCHA_PUBLIC','6LfNWNoSAAAAAJOLTB-T55AeQ271Rwo54u1PrfFV');
     	define('CAPTCHA_PRIVATE','6LfNWNoSAAAAALA10839k12oBnlvo-bWeHZ5Xj-2');
    	define("TID_CLASSEMENT_COLLECTION",64);
    	
    	define("MLID_AGENDA_FR",545);
    	define("MLID_AGENDA_EN",894);
    	define("MLID_AGENDA_DE",2361);
    	
    	define("MLID_EXPOSITION_FR",544);
    	define("MLID_EXPOSITION_EN",900);
    	define("MLID_EXPOSITION_DE",2362);
    	
    	define("MLID_COLLECTION_FR",1422);
    	define("MLID_COLLECTION_EN",1423);
    	define("MLID_COLLECTION_DE",2363);
    	
    	define("MLID_NUMERITHEQUE_FR",1252);
    	define("MLID_NUMERITHEQUE_EN",884);
    	define("MLID_NUMERITHEQUE_DE",2364);
    	
    	define("MLID_BOUTIQUE_FR",1259);
    	define("MLID_BOUTIQUE_EN",879);
    	define("MLID_BOUTIQUE_DE",2365);
    	
    	define("MLID_AVENTURE_FR",1263);
    	define("MLID_AVENTURE_EN",873);
    	define("MLID_AVENTURE_DE",2366);
    	
    break;
   
    case "www.museum-lehavre.fr":
    case "museum-lehavre.fr":
    case "museum-v2":
    case "museum.loc":
    	define('CAPTCHA_PUBLIC','6LdwCOcSAAAAAKEx3-3mOPm2a0ezGa2mtRrYRbbt');
    	define('CAPTCHA_PRIVATE','6LdwCOcSAAAAAE4WBFJLyrx13p6mnSWCs7oR4TN2');
    	define("TID_CLASSEMENT_COLLECTION",64);
    	
    
    	define("MLID_AGENDA_FR",545);
    	define("MLID_AGENDA_EN",894);
    	define("MLID_AGENDA_DE",2361);
    	
    	define("MLID_EXPOSITION_FR",544);
    	define("MLID_EXPOSITION_EN",900);
    	define("MLID_EXPOSITION_DE",2362);
    	
    	define("MLID_COLLECTION_FR",1422);
    	define("MLID_COLLECTION_EN",1423);
    	define("MLID_COLLECTION_DE",2363);
    	
    	define("MLID_NUMERITHEQUE_FR",1252);
    	define("MLID_NUMERITHEQUE_EN",884);
    	define("MLID_NUMERITHEQUE_DE",2364);
    	
    	define("MLID_BOUTIQUE_FR",1259);
    	define("MLID_BOUTIQUE_EN",879);
    	define("MLID_BOUTIQUE_DE",2365);
    	
    	define("MLID_AVENTURE_FR",1263);
    	define("MLID_AVENTURE_EN",873);
    	define("MLID_AVENTURE_DE",2366);
    	
    	break;
   
}

///////////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////////

/**
 * Implementation of hook_menu_alter().
 */
function mnhn_content_menu_alter(&$items) {
  // Override default home page content.
  $items['node']['page callback'] = 'mnhn_content_node_page_default';
  $items['admin/tasks']['type'] = MENU_CALLBACK;
  $items['admin/index']['type'] = MENU_CALLBACK;
  $items['admin/dashboard']['type'] = MENU_CALLBACK;
  $items['admin/help']['type'] = MENU_CALLBACK;
}


/**
 * Menu callback for default page.
 */
function mnhn_content_node_page_default() {
  drupal_set_title('');
  return '';
}
 

/**
* Implements hook_form_alter().
*/
function mnhn_content_form_alter(&$form, &$form_state, $form_id) {
	
  	//dsm($form_id);  // print form ID to messages
  	//dsm($form);  // pretty print array using Krumo to messages
  	
  	
  	unset($form['options']['sticky']);
	unset($form['revision_information']);
	unset($form['author']);
	
	
	
	
	  switch($form_id){
	  	
		case 'search_block_form':
			$form["actions"]["submit"]['#value']='OK';
			break;

		case 'search_form':
			$form["#prefix"]='
			<div class="page-header">
				<h1>'.t('Search').'</h1>
			</div>';
			$form["basic"]["submit"]['#value']='OK';
			
			break;		
			
		case 'menu_edit_item':
			global $language;
			$form['#attributes'] = array('enctype' => "multipart/form-data");
			$mlid=$form['mlid']['#value'];
			$mlid_collection=constant("MLID_COLLECTION_".strtoupper($language->language));
			
		
	  		
			if($form['original_item']['#value']['menu_name'] == 'menu-menu-principal' && $form['original_item']['#value']['plid']==0){
				
				
					$form['menu_subtitle_'.$mlid.'_'.$language->language] = array( 
				   			'#type' => 'textfield',
							'#weight' => 1,
				   		    '#title' => 'Sous-titre',
				   		 	'#default_value' => variable_get('menu_subtitle_'.$mlid.'_'.$language->language, '')
				   		);
			   		
				
						$form['#submit'][]='mnhn_content_menu_edit_admin_form_bkg_submit';
				
	   			
				
			}
			
			
			
			// Vignette Menu XL
			if(
				($form['original_item']['#value']['menu_name'] == 'menu-menu-principal' && $form['original_item']['#value']['p1']>0 && $form['original_item']['#value']['p2']>0 && $form['original_item']['#value']['p3']==0)
				||
				($form['original_item']['#value']['menu_name'] == 'menu-menu-principal' && $form['original_item']['#value']['p1']==$mlid_collection && $form['original_item']['#value']['plid']!=$mlid_collection)	
			){	
				$mlid=$form['mlid']['#value'];
					
				if($form['original_item']['#value']['p1']!=$mlid_collection){
					$form['menu_text_'.$mlid] = array( 
					    '#type' => 'textarea', 
					    '#title' => t('Texte'), 
					    '#required' => FALSE,
					    '#cols' => 50,
					    '#rows' => 3,
					    '#default_value' => variable_get('menu_text_'.$mlid, ''), 
					    '#format' => 'plain_text'
			   		); 
				}
				
				$filepath_image=str_replace('public://','sites/default/files/',variable_get('menu_image_'.$mlid,''));
 		
			   if($filepath_image!=''){
			   	
			   		$info=mnhn_content_get_image_info($filepath_image);
			   		
			   		//(substr($image,0,3)=='ban')? $witdh=' width="400px"': $witdh='';
			   		
			   		$form['visuel_'.$mlid] = array( 
			   			'#type' => 'item',
			   		     '#title' => 'Vignette Menu XL',
			   		 	'#description' => '<div>'.theme('image_style', array('style_name' => 'menu', 'path' => variable_get('menu_image_'.$mlid,''))).'<p>  '.$info['nom'].' - '.$info['poids'].' - '.$info['largeur'].'x'.$info['hauteur'].'</p></div>',
			   		);
		
			   		$form['delete'] = array(
			   			'#type' =>  'checkbox',  
						'#title' => 'Supprimer', 
			   		); 
			   		
			   		$form[$mlid.'_old'] = array(
			   			'#type' => 'hidden',  
			   			'#value' => variable_get('menu_image_'.$mlid,''),
			   		); 
			   }
	 
			   $form['menu_image_'.$mlid] = array( 
				    '#title' => 'Uploader une vignette (menu XL)',
				    '#type' => 'file', 
				    '#required' => FALSE,
			   );
	   
				$form['#submit'][]='mnhn_content_menu_edit_admin_form_vignette_submit';
			 
	   			
				
			}
       break;
		
       	case 'lettre_node_form':
       		$form['title']['#maxlength']=50;
       		$form['title']['#size']=50;
			$form['title']['#description']='50 car. max';
			
			break;
       
		case 'exposition_node_form':
		case 'collection_node_form':
		case 'oeuvre_une_node_form':
		case 'page_node_form':
		case 'visite_node_form':	
		case 'blog_node_form':	
			
			drupal_add_js('jQuery(function() {
   
							jQuery("#edit-field-page-chapo-und-0-value").keyup(function(){
								limitText("#edit-field-page-chapo-und-0-value",275);
						     });
			});','inline');
			
			$form['title']['#maxlength']=50;
			$form['title']['#size']=50;
			$form['title']['#description']='50 car. max';

			//print_r($tab_mlid_language);
			//exit;
			//print_r($form['menu']['link']['parent']['#options']);
			//exit;
			if($form['menu']['link']['parent']){
				$tab_mlid_language=mnhn_content_mlid_language();
				foreach($form['menu']['link']['parent']['#options'] as $key => $value){
					//print $key;
					//exit;
					if (!in_array($key, $tab_mlid_language)) {
						unset($form['menu']['link']['parent']['#options'][$key]);
					}
				}
			}
			$mlid=mnhn_content_menu_mlid();
			
			$nid=$form['nid']['#value'];
			if($nid>0){
				
				$default_bloc_override=variable_get('mnhn_bloc_right_'.$nid, array());
				if($default_bloc_override[1]==1){
					$default_mlid='node'.$nid;
					
				}else{
					if(mnhn_content_get_content_type(arg(1))=='blog'){
						$default_mlid='blog';
					}else{
						$default_mlid=mnhn_content_menu_mlid();
					}
				}
				
				//print $default_mlid;
				//exit;
				
				$form['mnhn_bloc_right'] = array( 
				    '#type' => 'checkboxes', 
					'#options' => array(1 => 'Surcharger les blocs (colonne de droite)'), 
			   		'#default_value' => $default_bloc_override,
				    '#weight' => 20,
				   ); 
				
				drupal_add_js('
					jQuery(function() {
					
						if(jQuery("#edit-mnhn-bloc-right .form-checkbox").is(":checked")){
						  		jQuery(".mnhn_node_bloc").show();
						}else{
						  		jQuery(".mnhn_node_bloc").hide();
						 }
					
						jQuery("#edit-mnhn-bloc-right .form-checkbox").click(function(){
							if(jQuery(this).is(":checked")){
						  		jQuery(".mnhn_node_bloc").show();
						  	}else{
						  		jQuery(".mnhn_node_bloc").hide();
						  	}
						
						});
					
						jQuery("#edit-mnhn-rubrique-node'.$nid.' .collapsible").each(function(){
							  	var id=jQuery(this).parent().parent().attr("id");
							  	
							  	if(jQuery(this).is(":checked")){
							  		jQuery("#"+id+"-state").show();
							  		jQuery("#"+id+"-wrapper").show();
							  	}else{
							  		jQuery("#"+id+"-state").hide();
							  		jQuery("#"+id+"-wrapper").hide();
							  	}
							  
							});
					
						
					  	jQuery("#edit-mnhn-rubrique-node'.$nid.' .collapsible").click(function(){
						  	var id=jQuery(this).parent().parent().attr("id");
						  	
						  	if(jQuery(this).is(":checked")){
						  		jQuery("#"+id+"-state").show();
						  		jQuery("#"+id+"-wrapper").show();
						  	}else{
						  		jQuery("#"+id+"-state").hide();
						  		jQuery("#"+id+"-wrapper").hide();
						  	}
						  
						});
					  		
					  	
					  	
					});','inline');
				
				module_load_include('inc', 'mnhn_content', 'mnhn_content_admin');
				
				$form['#attributes'] = array('enctype' => "multipart/form-data");
   			    $form['#submit'][]='mnhn_content_bloc_submit';
				
				$form['mnhn_rubrique_node'.$nid] = array( 
				    '#type' => 'fieldset', 
				    '#title' => 'Colonne de droite', 
				    '#attributes' => array('class' => array('mnhn_node_bloc')),
				    '#weight' => 21,
				   ); 
			
		 
				mnhn_content_bloc_element_form($form,array('link' => array('mlid'=> 'node'.$nid, 'link_title'=>'')),$default_mlid);
			}
			
	  }		
	  
	  
	  
	 
	  
	  
}

/**
 * Traitement surcharge formulaire
 * Item menu XL
 */
function mnhn_content_bloc_submit($form, &$form_state) {


  		$nid=arg(1);
  			
  		$default_mlid=mnhn_content_menu_mlid();
		$default_image=variable_get('bloc_image_url_'.$default_mlid,'');
		variable_set('bloc_image_url_node'.$nid,$form_state['values']['node'.$nid.'_image_old']);
  		

		  $validators = array('file_validate_is_image' => array());
		 
		  if($form_state['values']['delete_image_node'.$nid]){
		  	
		  	
			  if($form_state['values']['delete_image_node'.$nid]==1){
			  	
			  		if($form_state['values']['node'.$nid.'_image_old']!=$default_image){
			  			db_query("DELETE FROM {file_managed} WHERE uri=:uri", array(':uri' => $form_state['values']['node'.$nid.'_image_old']));
			        	unlink(str_replace('public://','sites/default/files/',$form_state['values']['node'.$nid.'_image_old']));
			  		}
			         
			          variable_set('bloc_image_url_node'.$nid,'');
			  }
		  }
		  $file = file_save_upload('bloc_image_node'.$nid, $validators, 'public://bloc/');
		  if ($file) {
		   			
		         	variable_set('bloc_image_url_node'.$nid,$file->uri);
		         	
		         	
		         	$file->status = FILE_STATUS_PERMANENT;
			 	 	file_save($file);
		          // suppression ancien fichier
		          if($form_state['values']['node'.$nid.'_image_old']){
			          if($form_state['values']['node'.$nid.'_image_old']!=$file->uri && $form_state['values']['delete_image_node'.$nid]==0 && $form_state['values']['node'.$nid.'_image_old']!=$default_image){
			          	db_query("DELETE FROM {file_managed} WHERE uri=:uri", array(':uri' => $form_state['values']['node'.$nid.'_image_old']));
			          	unlink(str_replace('public://','sites/default/files/',$form_state['values']['node'.$nid.'_image_old']));
			          }  
		          }
		  }
  
 		
 		
 	
 	//print variable_get('bloc_image_542','');
	//exit;
 	
}


/**
* Implements hook_block_info().
*/
function mnhn_content_block_info() {
  $blocks['footer_info'] = array(
    'info' => t('Informations pratiques (Footer)'),
    'status' => TRUE,
    'region' => 'footer',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['header_share'] = array(
    'info' => t('Partage (Header)'),
    'status' => TRUE,
    'region' => 'header',
    'weight' => 0,
    'visibility' => 1,
  );
  
 
  
  $blocks['content_home'] = array(
    'info' => t('Accueil'),
    'status' => TRUE,
    'region' => 'content',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['menu_principal'] = array(
    'info' => t('Menu principal'),
    'status' => TRUE,
    'region' => 'menu',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['menu_blog'] = array(
    'info' => t('Menu Blog'),
    'status' => TRUE,
    'region' => 'menu',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['menu_principal_xl'] = array(
    'info' => t('Menu principal XL'),
    'status' => TRUE,
    'region' => 'menu_xl',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['menu_vertical'] = array(
    'info' => t('Menu vertical'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['bloc_right_col'] = array(
    'info' => t('Blocs'),
    'status' => TRUE,
    'region' => 'sidebar_second',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['account'] = array(
    'info' => t('Compte utilisateur'),
    'status' => TRUE,
    'region' => 'header',
    'weight' => 0,
    'visibility' => 10,
  );
 
  return $blocks;
}

/**
* Implements hook_block_configure().
*/
function mnhn_content_block_configure($delta) {
  $form = array();
  switch($delta) {
	  case 'mnhn_info':
	  	/*
	    $form['pending_comment_count'] = array(
	      '#type' => 'textfield',
	      '#title' => t('Configure Number of Comments to Display'),
	      '#size' => 6,
	      '#description' => t('Enter the number of pending comments that will appear in the block.'),
	      '#default_value' => variable_get('pending_comment_count', 5),
	    );
	    */
	    break;
  
  }
  return $form;
}

/**
* Implements hook_block_view().
*/
function mnhn_content_block_view($delta = '') {
  switch ($delta) {
  case 'footer_info':
    //$block['subject'] = '';
    $block['content'] = '&nbsp;';
    return $block;
     
  break;
  
  case 'header_share':
    //$block['subject'] = '';
    $block['content'] = '&nbsp;';
    return $block;
     
  break;
  
 
  
  case 'content_home':
    //$block['subject'] = '';
    $block['content'] = '&nbsp;';
    return $block;
     
  break;
  
   case 'menu_principal':
    //$block['subject'] = '';
    $block['content'] = mnhn_content_menu_principal();
    return $block;
     
  break;
  
  case 'menu_blog':
    //$block['subject'] = '';
    $block['content'] = mnhn_content_menu_blog();
    return $block;
     
  break;
  
  case 'menu_principal_xl':
    //$block['subject'] = '';
    $block['content'] = mnhn_content_menu_principal_xl();
    return $block;
     break;
     
   case 'menu_vertical':
    //$block['subject'] = '';
   
    if(
		(arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='object')
		||
	    (arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='collection')
	    || 
	    (arg(0)=='collections')
	    ||
	    (arg(1)=='ecards')
    ){
    	
    $block['content'] = mnhn_content_menu_vertical("menu-menu-principal");
    return $block; 
    }
    
   if(
	    (arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='visite')
    ){
    	
    $block['content'] = mnhn_content_menu_vertical("menu-dedies");
    return $block; 
    }
    
   if(
	    (arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='page')
    ){
    $menu_name=db_query('select menu_name from menu_links where link_path=:link_path and menu_name<>:menu_name',array(':menu_name' => 'menu-footer',':link_path'=>'node/'.arg(1)))->FetchField();	
    if($menu_name){
    	$block['content'] = mnhn_content_menu_vertical($menu_name);
    }
    return $block; 
    }
    
     break;
     
    case 'bloc_right_col':
    //$block['subject'] = '';
    //$block['content'] ='eeee';
    //exit;

    if(arg(0)=='node' && arg(1)==''){
    	$block['content'] = mnhn_content_bloc_home();
    }else{
    	$block['content'] = mnhn_content_bloc();
    }
    return $block; 
    
    
    case 'account':
    //$block['subject'] = '';
    //$block['content'] ='eeee';
    //exit;
    
    $block['content'] = theme('account');
    
    return $block; 
     
  break;
  
  }
}

/**
 * Implements hook_node_presave().
 */
function mnhn_content_node_presave($node){
	unset($node->original);
	// Traitement spécifique
      switch($node->type){
      	
      	case 'collection':
      		$node->field_order['und'][0]['tid']=TID_CLASSEMENT_COLLECTION;
      		break;

      	
      	
      	default:
      		
      		unset($node->field_order['und']);
      } 
      
      
      // Traitement bloc colonne de droite
      switch($node->type){
      	case 'exposition':
      	case 'collection':
      	case 'oeuvre_une':
      	case 'page':
      	case 'visite':
      	case 'blog':		
      		variable_set('mnhn_bloc_right_'.$node->nid,$node->mnhn_bloc_right);
      		$blocs=mnhn_content_bloc_liste();
      		if($node->mnhn_bloc_right[1]==1){
      			
			  
			   foreach($blocs as $key => $value){
			   	//print_r($node->{'mnhn_bloc_node'.$node->nid.'_'.$key});
      			variable_set('mnhn_bloc_node'.$node->nid.'_'.$key,$node->{'mnhn_bloc_node'.$node->nid.'_'.$key});
      			variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_state',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_state'});
      			if($key=='bloc_lien'){
      				variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_title',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_title'});
      				variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_href',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_href'});
      			}
      			
			   if($key=='bloc_lien_interne'){
      				variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_value',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_value'});
      			}
      			
			   if($key=='bloc_libre'){
      				
			   		variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_title',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_title'});
      				variable_set('mnhn_bloc_node'.$node->nid.'_'.$key.'_texte',$node->{'mnhn_bloc_node'.$node->nid.'_'.$key.'_texte'});
		
      				
      			}
      			
			   }
			   
			  
			   
			  
      			//variable_set('bloc_image_url_'.$item['link']['mlid'],'');
      		}else{
      			foreach($blocs as $key => $value){
      				variable_del('mnhn_bloc_node'.$node->nid.'_'.$key);
      				variable_del('mnhn_bloc_node'.$node->nid.'_'.$key.'_state'); 
			   }
			   variable_del('mnhn_bloc_node'.$node->nid.'_bloc_lien_interne_value');
			   variable_del('mnhn_bloc_node'.$node->nid.'_bloc_libre_title');
	      	   variable_del('mnhn_bloc_node'.$node->nid.'_bloc_libre_texte');
	      	   variable_del('mnhn_bloc_node'.$node->nid.'_bloc_lien_title');
      		   variable_del('mnhn_bloc_node'.$node->nid.'_bloc_lien_href');
      		   variable_del('bloc_image_url_node'.$node->nid);
      			
      		}
    
      		break;	
      	
      
      } 
      
      /*
      $form['mnhn_bloc_right'] = array( 
				    '#type' => 'checkboxes', 
					'#options' => array(1 => 'Surcharger les blocs (colonne de droite)'), 
			   		'#default_value' => variable_get('mnhn_bloc_right_'.$nid, 0),
				    '#weight' => 9,
				   ); */
	
}

/**
 * Implements hook_node_view().
 */
function mnhn_content_node_view($node, $view_mode, $langcode) {
	
	if($node->type=='lettre'){
	
		$breacrumb=array();
		$breacrumb[]=l(t('Home'), '');
		$breacrumb[]=l(t('mnhn\'s e-news'), 'la-lettre-du-mnhn');
		drupal_set_breadcrumb($breacrumb);
	}
}

/**
 * Implements hook_entity_insert().
 */
function mnhn_content_entity_insert($entity, $type) {
	
	if($type=='field_collection_item'){
		
		if($entity->field_name=='field_page_bloc'){
			if(trim($entity->field_bloc_type['und'][0]['value'])==''){
					entity_delete($type, $entity->item_id);	
			}
			
	
		}
	}
 
}

function mnhn_content_entity_update($entity, $type) {
	
	if($type=='field_collection_item'){
		
		
		if($entity->field_name=='field_page_bloc'){
			if(trim($entity->field_bloc_type['und'][0]['value'])=='_none'){
					entity_delete($type, $entity->item_id);	
			}
		}
		
	}
 
}

/**
 * Implementation of hook_theme()
 */
function mnhn_content_theme(){
	return array(

			'account' => array(
					'template' => 'account'),

			'menu-xl-item' => array(
					'variables' => array('main_link' => NULL,'image' => NULL, 'title' => NULL, 'description' => NULL, 'links'=> NULL),
					'template' => 'menu-xl-item'),

			'list' => array(
					'variables' => array('title' => NULL,'subtitle' => NULL, 'image' => NULL, 'text' => NULL, 'link' => NULL, 'class'=> NULL, 'onglet'=> NULL),
					'template' => 'list'),

			'mnhn_bloc' => array(
					'variables' => array('bloc_id' => NULL,'title' => NULL,'content' => NULL, 'state' => NULL),
					'template' => 'mnhn_bloc'),

			'visite' => array(
					'variables' => array('title' => NULL,'description' => NULL),
					'template' => 'visite'),

			'search' => array(
					'variables' => array('result' => NULL),
					'template' => 'search'),

		 'mnhn_share' => array(
		 		'template' => 'mnhn_share'),

	);

}

/**
 * Implementation of hook_permission()
 */
function mnhn_content_permission(){
	return array('mnhn'=> array('title'=>'mnhn'));

}

/**
 * Implementation of hook_menu().
 */
function mnhn_content_menu() {
	
	
	$items['rss-blog.xml'] = array(
			'title' => 'RSS feed',
			'page callback' => 'node_feed',
			'access arguments' => array('access content'),
			'type' => MENU_CALLBACK,
			// Pass a FALSE and array argument to ensure that additional path components
			// are not passed to node_feed().
			'page arguments' => array(FALSE, array()),
	);
	

	$items['test/system'] = array(
			'page callback' => 'mnhn_content_test_system',
			'access arguments' => array('access content'),
			'type' => MENU_CALLBACK
	);

	

	$items['admin/mhnh'] = array(
			'title' => 'MHNH',
			'page callback' => 'system_admin_menu_block_page',
			'page arguments' => array('mnhn_content_footer_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'system.admin.inc',
			'file path' => drupal_get_path('module', 'system'),
			'weight' => 99,
	);

	 
	$items['admin/mhnh/footer'] = array(
			'title' => 'Footer',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_footer_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'mnhn_content_admin.inc',
			'description' => 'Adresse - Horaire - Fermeture',
			'weight' => 7,
	);





	$items['admin/mhnh/footer/texte'] = array(
			'title' => 'Texte',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => -10,
	);

	$items['admin/mhnh/footer/en-ligne'] = array(
			'title' => 'Le mnhn en ligne',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_online_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_LOCAL_TASK,
			'file' => 'mnhn_content_admin.inc',
	);

	$items['admin/mhnh/bloc'] = array(
			'title' => 'Blocs',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_bloc_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'mnhn_content_admin.inc',
			'description' => 'Affichage bloc en colonne de droite',
			'weight' => 8,
	);



	$items['admin/mhnh/bloc/rubrique'] = array(
			'title' => 'Rubrique',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => -10,
	);



	$items['admin/mhnh/bloc/infos-pratiques'] = array(
			'title' => 'Informations pratiques',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_bloc_infos_pratiques_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_LOCAL_TASK,
			'file' => 'mnhn_content_admin.inc',
	);

	$items['admin/mhnh/bloc/venir-museum'] = array(
			'title' => 'Venir au Muséum',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_bloc_venir_museum_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_LOCAL_TASK,
			'file' => 'mnhn_content_admin.inc',
	);

	$items['admin/mhnh/bloc/collections'] = array(
			'title' => 'BDD Collections',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_bloc_collecs_admin_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_LOCAL_TASK,
			'file' => 'mnhn_content_admin.inc',
	);




	$items['mnhn/autocomplete/link'] = array(
			'page callback' => 'mnhn_content_autocomplete_link',
			'access arguments' => array('access content'),
			'type' => MENU_CALLBACK
	);



	 


	$items['la-lettre-du-museum'] = array(
			'title' => 'Archives lettre du Muséum',
			'page callback' => 'mnhn_content_lettre_archives',
			'access arguments' => array('access content'),
			'type' => MENU_CALLBACK,
	);

	
	$items['admin/mhnh/deploiement'] = array(
			'title' => 'Déploiement',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('mnhn_content_admin_deploiement_settings'),
			'access arguments' => array('mnhn'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'mnhn_content_admin.inc',
			'description' => 'Déploiement contenu',
			'weight' => 20,
	);



	$items['captcha'] = array(
			'page callback' => 'mnhn_content_captcha',
			'access arguments' => array('access content'),
			'type' => MENU_CALLBACK,
			'file' => 'recaptcha.inc',
				
	);



	return $items;
}

/**
 * Implementation of hook_query_alter().
 */
function mnhn_content_query_alter(QueryAlterableInterface $query) {
	global $language;
	

	if ($query->hasTag('node_access') && arg(0)=='search') {
		$query->condition('n.language', $language->language);
		$query->condition(db_or()->condition('n.type', 'page')->condition('n.type', 'blog')->condition('n.type', 'collection')->condition('n.type', 'new_event')->condition('n.type', 'lettre')->condition('n.type', 'ressource')->condition('n.type', 'object'));
	}
}

/**
 * Implementation of hook_js_alter().
 */
function mnhn_content_js_alter(&$js) {
	//if((arg(0)=='admin') || (arg(0)=='node' && arg(2)=='edit') || (arg(0)=='node' && arg(1)=='add')) {
	//	unset($js['sites/all/modules/contrib/search_autocomplete/js/jquery.autocomplete.js']);
	//}
	if(arg(2)=='carte' || arg(2)=='drag-drop'){

		$js['misc/jquery.js']['data'] = drupal_get_path('theme','mnhn').'/js/libs/jquery_1_3.js';
		 
	}elseif((arg(0)=='admin') || (arg(0)=='node' && arg(2)=='edit') || (arg(0)=='node' && arg(1)=='add')) {

	}else{

		$js['misc/jquery.js']['data'] = drupal_get_path('theme', 'mnhn') . '/js/libs/jquery-1.7.1.min.js';

	}
	/*
	 if(arg(0)=='system' || arg(0)=='cart'){
	unset($js['sites/all/themes/mnhn/js/libs/custom-form-elements.js']);
	}
	*/

}

/**
 * Implementation of hook_search_execute().
 */
function mnhn_content_search_execute($keys = NULL, $conditions = NULL) {
	exit;
	// Build matching conditions
	$query = db_select('search_index', 'i', array('target' => 'slave'))->extend('SearchQuery')->extend('PagerDefault');
	$query->join('node', 'n', 'n.nid = i.sid');
	$query
	->condition('n.status', 1)
	->addTag('node_access')
	->searchExpression($keys, 'node');

	// Insert special keywords.
	$query->setOption('type', 'n.type');
	$query->setOption('language', 'n.language');
	if ($query->setOption('term', 'ti.tid')) {
		$query->join('taxonomy_index', 'ti', 'n.nid = ti.nid');
	}
	// Only continue if the first pass query matches.
	if (!$query->executeFirstPass()) {
		return array();
	}

	// Add the ranking expressions.
	_node_rankings($query);

	// Load results.
	$find = $query
	->limit(10)
	->execute();
	$results = array();
	foreach ($find as $item) {
		// Build the node body.
		$node = node_load($item->sid);
		node_build_content($node, 'search_result');
		$node->body = drupal_render($node->content);

		// Fetch comments for snippet.
		$node->rendered .= ' ' . module_invoke('comment', 'node_update_index', $node);
		// Fetch terms for snippet.
		$node->rendered .= ' ' . module_invoke('taxonomy', 'node_update_index', $node);

		$extra = module_invoke_all('node_search_result', $node);

		$results[] = array(
				'link' => url('node/' . $item->sid, array('absolute' => TRUE)),
				'type' => check_plain(node_type_get_name($node)),
				'title' => $node->title,
				'user' => theme('username', array('account' => $node)),
				'date' => $node->changed,
				'node' => $node,
				'extra' => $extra,
				'score' => $item->calculated_score,
				'snippet' => search_excerpt($keys, $node->body),
		);
	}
	return $results;
}

/**
 * Implementation of hook_wysiwyg_editor_settings_alter().
 */
function mnhn_content_wysiwyg_editor_settings_alter(&$settings, $context) {
	if($context['profile']->editor == 'tinymce') {
			
		$settings['paste_auto_cleanup_on_paste'] = true;
		$settings['paste_remove_styles'] = true;
		$settings['paste_remove_styles_if_webkit'] = true;
		$settings['paste_strip_class_attributes'] = true;

	}
}

///////////////////////////////////////////////////////////////////////////////////
// MENU MUSEUM SPECIFIQUE
///////////////////////////////////////////////////////////////////////////////////

/**
 * Menu Blog
 */
function mnhn_content_menu_blog(){
	
	//print_r($menu_principal);
	//exit;
	global $language;
	
	$id=array('menu_home','menu_articles','menu_apropos','menu_galerie','menu_coulisses','menu_contact');
                        
	$items = array();
	$items['attributes']['class']='mainmenu';
	$items['items'][]=array('data' => '<a href="/'.$language->language.'"><span>Accueil</span></a>','id'=>$id[0]);
	
	$menu=menu_tree_all_data("menu-blog");

	$w=1;
	foreach($menu as $item){
			if($item['link']['language']==$language->language){
					$main_link='';
					$class="";
					$z=0;
				
				if($_SERVER['REQUEST_URI']=='/'.$language->language.'/'.drupal_get_path_alias($item['link']['link_path'])){
					$class=' class="activ"';
				}	
				
				$link='<a href="/'.$language->language.'/'.drupal_get_path_alias($item['link']['link_path']).'"   '.$class.'>'.$item['link']['link_title'].'</a>';
				
			    $items['items'][] = array('data' => $link,'id' => $id[$w]);
				
			   $w++; 
		}
	}
	return theme('item_list', $items);
}

/**
 * Menu Principal
 */
function mnhn_content_menu_principal(){
	
	//print_r($menu_principal);
	//exit;
	global $language;
	$id=array('menu_home','menu_museum','menu_agenda','menu_expos','menu_collections','menu_numeritheque','menu_boutique','menu_aventure');
	
	$items = array();
	$items['attributes']['class']='mainmenu';
	$items['items'][]=array('data' => '<a href="/'.$language->language.'"><span>Accueil</span></a>','id'=>$id[0]);
	
	$w=1;
	
	$menu=menu_tree_all_data("menu-menu-principal");
	
	
	
	foreach($menu as $item){
			if($item['link']['language']==$language->language){
					$sub_title='<br/>'.variable_get('menu_subtitle_'.$item['link']['mlid'].'_'.$language->language, '');
					
					$main_link='';
					
			
					
					$class_li="";
					$z=0;
					
					foreach($item['below'] as $item_child){
						
						$main_link='';
						$i=0;
						foreach($item_child['below'] as $item_child_child){
							$link_child=$item_child_child['link']['link_path'];
							if($link_child=='<front>'){
								$link_child='/'.$language->language;
							}
							($i==0 && $z==0)?$main_link=$link_child:'';
								
								if($_SERVER['REQUEST_URI']=='/'.$language->language.'/'.drupal_get_path_alias($item_child_child['link']['link_path'])){
									$class_li='active';
								}
								
							$i++;
						}
						if(sizeof($item_child['below'])==0){
							
							
							($z==0)?$main_link=$link_child:'';
								if($_SERVER['REQUEST_URI']=='/'.$language->language.'/'.drupal_get_path_alias($item_child['link']['link_path'])){
									$class_li='active';
								}
						}
						
						
						
						$z++;
					}
				
				if($_SERVER['REQUEST_URI']=='/'.$language->language.'/'.drupal_get_path_alias($item['link']['link_path'])){
					$class_li='active';
				}	
				
			
					
				if(empty($main_link)){
					($item['link']['link_path']=='<front>')? $main_link=$language->language : $main_link=$language->language.'/'.drupal_get_path_alias($item['link']['link_path']);
				}
				
				//$link='<a href="/'.$main_link.'"  onclick="return false;" rel="menu-'.$item['link']['mlid'].'"><strong>'.$item['link']['link_title'].'</strong></a>';
				if($id[$w]=='menu_aventure'){
					$link='<a class="titre_menu" title="'.$item['link']['link_title'].'" href="/'.$main_link.'"><span>&nbsp;</span></a>';
				}elseif($id[$w]=='menu_agenda'){
          $link='<a href="/fr/agenda"  rel="menu-'.$item['link']['mlid'].'"><strong>'.$item['link']['link_title'].'</strong></a>';
        }else{
          $link='<a href="/'.$main_link.'"  onclick="return false;" rel="menu-'.$item['link']['mlid'].'"><strong>'.$item['link']['link_title'].'</strong></a>';
        }
			    $items['items'][] = array('data' => $link.$picto, 'id' => $id[$w],'class' => $class_li);
				
			    
			    $w++;
		}
	}
	
	
	
	return theme('item_list', $items);

}

/**
 * Menu XL
 */
function mnhn_content_menu_principal_xl(){
	global $language;
	$menu=menu_tree_all_data("menu-menu-principal");
	
	
	
	$id=array('bigmenu_museum','bigmenu_agenda','bigmenu_expos','bigmenu_collections','bigmenu_numeritheque','bigmenu_boutique','bigmenu_aventure');
	$mlid_agenda=constant("MLID_AGENDA_".strtoupper($language->language));
	$mlid_exposition=constant("MLID_EXPOSITION_".strtoupper($language->language));
	$mlid_collection=constant("MLID_COLLECTION_".strtoupper($language->language));
	$mlid_numeritheque=constant("MLID_NUMERITHEQUE_".strtoupper($language->language));
	$mlid_boutique=constant("MLID_BOUTIQUE_".strtoupper($language->language));
	$mlid_aventure=constant("MLID_AVENTURE_".strtoupper($language->language));
	
	$list = array();
	$i=0;
	$w=0;
	
	foreach($menu as $item){
		if($item['link']['language']==$language->language){
			$output.='<div id="'.$id[$w].'" class="bigmenu"><div class="items">';
	
			
			if($item['link']['mlid']==$mlid_agenda){
				//$events=mnhn_agenda_menu_xl();
				//$output.=theme('menu-xl-item-agenda', array('events' => $events));
				
			}elseif($item['link']['mlid']==$mlid_exposition){
				$events=mnhn_exposition_menu_xl();
				$output.=theme('menu-xl-item-exposition', array('expositions' => $events));
			
			}elseif($item['link']['mlid']==$mlid_collection){
				$collections=mnhn_collection_menu_xl();
				$output.=theme('menu-xl-item-collection', array('collections' => $collections));
			}elseif($item['link']['mlid']==$mlid_numeritheque){
				$numeritheque=mnhn_numeritheque_menu_xl();
				$output.=theme('menu-xl-item-numeritheque', array('numeritheque' => $numeritheque));
			}elseif($item['link']['mlid']==$mlid_boutique){
				$boutique=mnhn_boutique_menu_xl();
				$output.=theme('menu-xl-item-boutique', array('boutique' => $boutique));
			}elseif($item['link']['mlid']==$mlid_aventure){
				//
			}else{
			
					foreach($item['below'] as $item_child){
						//print_r($item_child);
						//exit;
						$title=$item_child['link']['link_title'];
						$uri=variable_get('menu_image_'.$item_child['link']['mlid'],'');
						$description=variable_get('menu_text_'.$item_child['link']['mlid'],'');
						$image='';
						if(!empty($uri)){
							$image=theme('image_style', array('style_name' => 'menu', 'path' => variable_get('menu_image_'.$item_child['link']['mlid'],'')));
						}
						
						
						$list_child_child = array();
						$links='';
						$main_link='';
						$i=0;
						$list_child_child='';
						foreach($item_child['below'] as $item_child_child){
							($i==0)?$main_link=$item_child_child['link']['link_path']:'';
							 $list_child_child.= l($item_child_child['link']['link_title'],$item_child_child['link']['link_path'],array('attributes' => array('class' => array('link'))));
							 $i++;
						}
						if(sizeof($item_child['below'])>0){
							$links=$list_child_child;
							if(!empty($item_child['link']['link_path']) && $item_child['link']['link_path']!='<front>'){
								$main_link=$item_child['link']['link_path'];
							}
						}else{
							$main_link=$item_child['link']['link_path'];
							$links = l(t('More information'),$item_child['link']['link_path'],array('attributes' => array('class' => array('link'))));
							
						}
						
		
						$output.=theme('menu-xl-item', array('main_link' => $main_link,'image' => $image, 'title' => $title, 'description' => $description, 'links'=> $links));
		
					}
			}		
		
		$w++;
		$output.='<a class="close" href="#" style="display: inline;">'.t('Close').'</a></div><div class="bottom"></div></div>';
		}
	}
	
	return $output;
	
	
}

/**
*
* Returns the path alias id for a given alias.
*
* $source
* string    The system path
*
*/
function mnhn_content_get_pid( $source ) {
	if ( isset($nid)  && is_numeric($nid) ) {
		
		$query = db_select("url_alias", "ua");
		$result = $query->fields("ua" )
		->condition( "source", $source , "=")
		->execute();
		$data = $result->fetchAssoc();
		return $data['pid'];
	}
	else {
		return 0;
	}
}

/**
 *
 * Menu vertical
 *
 * $param $menu => type de menu
 *
 *
 */
function mnhn_content_menu_vertical($menu){
	global $language;
	$p1=mnhn_content_menu_item_parent('p1',$menu);
	$p2=mnhn_content_menu_item_parent('p2',$menu);
	//print $p1;
	//exit;
	
	$menu=menu_tree_all_data($menu);
	
	
	$list = array();
	
	foreach($menu as $item){
		
		//$output.='<div class="cols" id="menu-'.$item['link']['mlid'].'">';
		//$output.='zz';
			if($item['link']['mlid']==$p1){
				$main_title=$item['link']['link_title'];
				
				foreach($item['below'] as $item_child){
					$rel_direct='';
					$class_direct="";
					$class="";
					$list_child_child = array();
					$links='';
					$main_link='';
					$i=0;
					foreach($item_child['below'] as $item_child_child){
						//($i==0 && !empty($item_child['link']['link_path']))?$main_link=$item_child_child['link']['link_path']:'';
						 
						
						 $i++;
						 if(arg(2)=='oeuvre'){
						 	$path_test='node/'.arg(1);
						 }else{
						 	$path_test=$_GET['q'];
						 }
						 
						if($item_child_child['link']['link_path']==$path_test){
							$class_child='activ';
						}else{
							$class_child='';
						}
						$list_child_child['items'][]=array('data' => l($item_child_child['link']['link_title'],$item_child_child['link']['link_path']), 'class' => $class_child);
						 
					}
					
					if(sizeof($item_child['below'])>0){
						$links=theme('item_list', $list_child_child);
						$class='submenu';
						if(!empty($item_child['link']['link_path']) && $item_child['link']['link_path']!='<front>'){
							$rel_direct=' rel="/'.$language->language.'/'.drupal_get_path_alias($item_child['link']['link_path']).'"';
						}
						$item_title='<a href="javascript:;" '.$rel_direct.'>'.$item_child['link']['link_title'].'</a>';
					}else{
						$class_direct='direct';
						$item_title='<a href="/'.$language->language.'/'.drupal_get_path_alias($item_child['link']['link_path']).'" title="'.$item_child['link']['link_title'].'">'.$item_child['link']['link_title'].'</a>';
					}
					
					if($item_child['link']['link_path']==$_GET['q']  || $item_child['link']['mlid']==$p2){
						$class.=' activ expanded';
					}
					$list['items'][]=array('data' => $item_title.$links, 'class' => $class);
									 
				}
		}
		
	
	}
	//print_r($list);
	//exit;
	$list['title']=$main_title;
	$list['attributes']['class']='menu-vertical';
	$output = theme('item_list',$list);
	return $output;

	
}

/**
* 
* Fonction Renvoi de l'item principal de menu
* 
* @param string => $path (URL de menu niveau 1)
*
* 
*/
function mnhn_content_menu_item_parent($position,$menu){
	
	global $language;
	if((arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='object') ){
		$nid_collection=mnhn_collection_objet_collection(arg(1));
		$path='node/'.$nid_collection;
	}else{
		$path=$_GET['q'];
	}
	//print $path;
	//exit;
	
	$mlid=db_query('select '.$position.' from menu_links where menu_name=:menu and link_path=:path and language=:language', array(':menu' => $menu,':path' => $path,':language' => $language->language))->fetchField();
	return $mlid;
	
}

/**
 * Submit handler for private file upload form.
 */
function mnhn_content_menu_edit_admin_form_vignette_submit($form, &$form_state) {
	$mlid=arg(4);

	variable_set('menu_text_'.$mlid,$form_state['values']['menu_text_'.$mlid]);
	$validators = array('file_validate_is_image' => array());
	$file = file_save_upload('menu_image_'.$mlid, $validators, 'public://menu/');
	if($form_state['values']['delete']){
		if($form_state['values']['delete']==1){
			db_query("DELETE FROM {file_managed} WHERE uri=:uri", array(':uri' => $form_state['values'][$mlid.'_old']));
			unlink(str_replace('public://','sites/default/files/',$form_state['values'][$mlid.'_old']));
			variable_set('menu_image_'.$mlid,'');
		}
	}
	if ($file) {
		 
		variable_set('menu_image_'.$mlid,$file->uri);
		$file->status = FILE_STATUS_PERMANENT;
		file_save($file);
		// suppression ancien fichier
		if($form_state['values'][$mlid.'_old']){
			if($form_state['values'][$mlid.'_old']!=$file->uri && $form_state['values']['delete']==0){
				db_query("DELETE FROM {file_managed} WHERE uri=:uri", array(':uri' => $form_state['values'][$mlid.'_old']));
				unlink(str_replace('public://','sites/default/files/',$form_state['values'][$mlid.'_old']));
			}
		}
	}
}

/**
 * Submit handler for private file upload form.
 */
function mnhn_content_menu_edit_admin_form_bkg_submit($form, &$form_state) {
	$mlid=arg(4);
	global $language;

	variable_set('menu_subtitle_'.$mlid.'_'.$language->language,$form_state['values']['menu_subtitle_'.$mlid.'_'.$language->language]);
	
}

/**
 * Fonction renvoie le mlid (ID item menu)
 * en fonction des URLS
 *
 *
 */
function mnhn_content_menu_mlid(){

	//print_r($_SERVER);
	// exit;
	global $language;
	$tab_url[]=arg(0);
	if(arg(1)){
		$tab_url[]=arg(1);
	}
	if(arg(2) && arg(2)!='edit'){
		$tab_url[]=arg(2);
	}

	if(arg(3)){
		$tab_url[]=arg(3);
	}
	if(arg(4)){
		$tab_url[]=arg(4);
	}

	$url= implode("/", $tab_url);
	$mlid=db_query('select p1 from menu_links where link_path=:url and menu_name in (:menu1,:menu2) and language=:language', array(':url' => $url,':menu1' => 'menu-dedies',':menu2' => 'menu-menu-principal',':language' => $language->language))->fetchField();
	if(empty($mlid)){
		$mlid=db_query('select p1 from menu_links where link_path=:url and menu_name=:menu and language=:language', array(':url' => $url,':menu' => 'menu-footer',':language' => $language->language))->fetchField();
	}

	$nid_cond_vente=variable_get('mnhn_boutique_cgv_'.$language->language, '');
	$nid_cond_vente=mnhn_content_autocomplete_nid($nid_cond_vente);

	if($mlid>0){
		return $mlid;
	}elseif( mnhn_content_get_content_type(arg(1))=='new_event'){
		return constant("MLID_AGENDA_".strtoupper($language->language));
	}elseif( arg(0) == 'expositions-itinerantes'){
    return constant("MLID_EXPOSITION_".strtoupper($language->language));
  }elseif( mnhn_content_get_content_type(arg(1))=='object'){
		return constant("MLID_COLLECTION_".strtoupper($language->language));
	}elseif( mnhn_content_get_content_type(arg(1))=='exposition'){
		return constant("MLID_EXPOSITION_".strtoupper($language->language));
	}elseif( mnhn_content_get_content_type(arg(1))=='ressource'){
		return constant("MLID_NUMERITHEQUE_".strtoupper($language->language));
	}elseif( mnhn_content_get_content_type(arg(1))=='produit'){
		return constant("MLID_BOUTIQUE_".strtoupper($language->language));
	}elseif(arg(1)==$nid_cond_vente){
		return constant("MLID_BOUTIQUE_".strtoupper($language->language));
	}

}

/*
 * Liste des ID MENU
 * 
 * @return array() 
 * 
 */
function mnhn_content_mlid_language(){
	global $language;

	$sql = 'SELECT menu_name,mlid from menu_links where language=:language and menu_name in(:menu1,:menu2,:menu3) order by menu_name';
	$result=db_query($sql,array(':language'=>$language->language, ':menu1'=>'menu-dedies', ':menu2'=>'menu-menu-principal', ':menu3'=>'menu-footer'));

	$mlid[]='menu-dedies:0';
	$mlid[]='menu-menu-principal:0';
	$mlid[]='menu-footer:0';

	foreach($result as $row){
		$mlid[]=$row->menu_name.':'.$row->mlid;
	}


	return $mlid;

}


///////////////////////////////////////////////////////////////////////////////////
// FONCTIONS TRANSVERSALLES
///////////////////////////////////////////////////////////////////////////////////

/*
 * 
 * Validation AJAX Captcha
 * 
 */
function mnhn_content_captcha(){


	$resp = recaptcha_check_answer (CAPTCHA_PRIVATE, $_SERVER["REMOTE_ADDR"], $_POST['challenge'],$_POST['response']);

	if($_SERVER['SERVER_NAME']=='preprod.museum-lehavre.fr'){
		print "ok";
	}else{

		if ($resp->is_valid) {
			print "ok";
		}
	}

	
	

}

/**
* 
* Fonction Récupère le type de contenu d'un noeud
* 
* @param $nid 
* 
* 
* @return string 
*
*
*/
function mnhn_content_get_content_type($nid){
	
	$type=db_query('SELECT type from node where nid=:nid',array(':nid'=> $nid))->fetchField();
		
		if($type){		 
 			return $type;
		}
}

/**
 *
 * Fonction Récupère infos image
 *
 * @param $nid
 *
 *
 * @return array
 *
 *
 */
function mnhn_content_get_image_info($filepath){
	$info=array();
	@list($width, $height, $type, $attr) = getimagesize($filepath);
	$info['largeur']=$width;
	$info['hauteur']=$height;
	$info['nom']=basename($filepath);
	$info['poids']=round(@filesize($filepath)/1000).'Ko';
				
	return $info;
}

/**
 *
 * Fonction Récupère position image
 *
 * @param $filepath
 * @param $ratio
 *
 *
 * @return string
 *
 *
 */
function mnhn_content_get_image_type($filepath,$ratio=0){
	
	
	list($width, $height, $type, $attr) = getimagesize($filepath);
	
	if($ratio>0){
		if($width>=$height){
			
			if(($width/$height)>$ratio){	
				$position='_portrait';
			}else{
				$position='_paysage';
			}
			
		}else{
			if(($width/$height)<$ratio){		
				$position='_paysage';
			}else{
				$position='_portrait';
			}
		}
	}else{
		if($width>$height){
			$position='_paysage';
		}else{
			$position='_portrait';
		}
	}

	return $position;
}

/**
* 
* Fonction Génération d'accroche à partir d'une limite de caractère
* 
* @param string => $text (chaine à traiter)
* @param int => $lim (nombre de caractères max) 
* 
* @return string 
*
*/
function mnhn_content_clean_teaser($text, $lim) {
	$text=strip_tags($text);
	if (strlen($text) > $lim) {
		
		$text = substr($text,0,$lim);
		$espace=strrpos($text," ");
		
	  	if($espace) {
		    $text=substr($text,0,$espace);
	  	}
		
  		return $text.'...';
	} else {
		return $text;
	}	
}

/**
* 
* Fonction Affichage teaser
* 
* @param array => $text 
* @param int => $lim (nombre de caractères max) 
* 
* @return string 
*
*/
function mnhn_content_teaser($text, $lim) {
	if(trim($text['summary'])!=''){
		return $text['summary'];
	}else{
		return mnhn_content_clean_teaser($text['value'], $lim);
	}
	
}

/**
* 
* Fonction Liste des pièces jointes
* 
* @param $files => champs pièces jointes 
* 
* @return int 
*
*
*/
function mnhn_content_list_files($files,$title=0){
	//print_r($files);
	//exit;
	$i=0;
	if($files){
		// Liste des fichiers joints
	 	foreach($files as $file){
			if($file){
		 	
		 		if($file['uri']){
		 			$i++;
					$output.=mnhn_content_file($file);
		 		}
		 	}
		}
	 	
	 	if($i>0){
	 		if($title>0){
	 			$title_bloc='<h2 class="annexe">Hors les murs</h2>';
	 		}
	 		return $title_bloc.'<div class="download">'.$output.'</div>';
	 	}
	}
}

/**
 * Theme function for the 'generic' single file formatter.
 */
function mnhn_content_file($file) {
  // Views may call this function with a NULL value, return an empty string.
  
	
  if (empty($file['fid'])) {
    return '';
  }


  $filepath=file_create_url($file['uri']);
  $icon = theme('filefield_icon', $file);

  // Set options as per anchor format described at
  // http://microformats.org/wiki/file-format-examples
  // TODO: Possibly move to until I move to the more complex format described 
  // at http://darrelopry.com/story/microformats-and-media-rfc-if-you-js-or-css
  $options = array(
    'attributes' => array(
      'type' => $file['filemime'] . '; length=' . $file['filesize'],
      'target' => '_blank',
      'class' => 'link_doc' 
    ),
  );

  // Use the description as the link text if available.
  if (empty($file['description'])) {
    $link_text = $file['filename'];
  }
  else {
    $link_text = $file['description'];
    $options['attributes']['title'] = $file['filename'];
  }
  $ext = substr(strtolower(strrchr(basename($file['filename']), ".")),1);
  $size=ceil($file['filesize']/1000);
  if($size>1000){
  	$size=round($size/1000,1);
  	$size.=' Mo';
  }else{
  	$size.=' Ko';
  }
  $info='('.$ext.' - '.$size.')';

  return l($link_text.' '.$info, $filepath, $options);
}

/**
* 
* Fonction Liste des liens
* 
* @param $links => champs lien node reference 
* 
* @return int 
*
*
*/
function mnhn_content_list_links($field_link,$title=0){
	//print_r($bloc);
	//exit;
	
					
					$output='<div class="linkside">';
					foreach ($field_link as $link ) {
						//print_r($link);
						//exit;
						if($link->field_bloc_link_internal['und'][0]['nid']>0){
							
							$nid=$link->field_bloc_link_internal['und'][0]['nid'];
	
							$link_title=db_query('select title from node where nid=:nid',array(':nid'=>$nid))->fetchField();
							$options = array(
							    'attributes' => array(
							      'title' => $link_title,
							      'class' => 'link_inside'	
							    ),
							  );
							$output.=l($link_title, 'node/'.$nid, $options);
				
							
							
						}else{
							
							if(!empty($link->field_bloc_link_external['und'][0]['title'])){
								$link_title=$link->field_bloc_link_external['und'][0]['title'];
							}else{
								$link_title=$link->field_bloc_link_external['und'][0]['url'];
							}
							$options = array(
							    'attributes' => array(
							      'title' => $link_title,
								  'target' => '_blank',
								  'class' => 'link_inside'	
							    ),
							  );
							
							$output.=l($link_title, $link->field_bloc_link_external['und'][0]['url'], $options);
						}
							
					}
					$output.='</div>';
					
					
				if($title>0){
					$title_bloc='<h2 class="annexe">À découvrir sur notre site</h2>';	
				}	
		

		return $title_bloc.$output;
		
	
	
	
	
}

/**
* 
* Fonction Liste des mots clés
* 
* @param $keyword => champs mots clé term reference 
* 
* @return string 
*
*
*/
function mnhn_content_list_keywords($keywords){
	//print_r($links);
	//exit;
	global $language;
	$i=0;
	
	if($keywords){
		// Liste des fichiers joints
	 	foreach($keywords as $keyword){
	 	
			$tid=$keyword['tid'];
			
			if($tid>0){
				$term_title=mnhn_content_get_term($tid);
				$options = array(
				    'attributes' => array(
				      'title' => $term_title,
				    ),
				  );
				  $term_lists[]=l($term_title,'search/node/'.strtolower($term_title), $options);
			}
			$i++;
		}
	 	
	 	if($i>0){
	 		$output.='<div class="join-title">'.t('Keywords').' :</div>';
	 		$output.='<div class="join-content join-keyword">';
	 		$output.=implode(', ',$term_lists);
	 		$output.='</div>';
	 		return $output;
	 	}
	}
}

function mnhn_content_autocomplete_nid($string){
	$nid=substr($string,strpos($string,'[')+1,-1);

	return $nid;
}

/**
* 
* Fonction Libelle Medium date (debut et fin)
* 
* 
* @param int => timestamp debut
* @param int => timestamp fin
* 
* @return string 
* exemple : du 15 au 25 Mai 2012
*/
function mnhn_content_format_date_medium($timestamp_debut,$timestamp_fin,$expo=0) {
	global $language;
	if($language->language=='fr'){
		setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	}
	if($language->language=='de'){
		setlocale(LC_ALL, 'de_DE.utf8', 'deu');
	}
	
	$jour_debut=date('d',$timestamp_debut).'&nbsp;';
	$mois_debut=strftime('%B', $timestamp_debut).'&nbsp;';
	$annee_debut=date('Y',$timestamp_debut).'&nbsp;';

	$libelle_date=$jour_debut.$mois_debut.$annee_debut;
	
	if($timestamp_fin>0 && $timestamp_fin>$timestamp_debut){
		$jour_fin=date('d',$timestamp_fin).'&nbsp;';
		$mois_fin=strftime('%B', $timestamp_fin).'&nbsp;';
		$annee_fin=date('Y',$timestamp_fin).'&nbsp;';
		
		//if($mois_fin==$mois_debut){
		//	$mois_debut='';
		//}
		
		if($annee_fin==$annee_debut){
			$annee_debut='';
		}
		if($expo==1){
			$libelle_date=$jour_debut.$mois_debut.$annee_debut.' - '.$jour_fin.$mois_fin.$annee_fin;
		}else{
			if($language->language=='fr'){
				$libelle_date='du '.$jour_debut.$mois_debut.$annee_debut.'au '.$jour_fin.$mois_fin.$annee_fin;
			}elseif($language->language=='en'){
				$libelle_date='from '.$jour_debut.$mois_debut.$annee_debut.'to '.$jour_fin.$mois_fin.$annee_fin;
			}elseif($language->language=='de'){
				$libelle_date='from '.$jour_debut.$mois_debut.$annee_debut.'to '.$jour_fin.$mois_fin.$annee_fin;
			}
		}
	}
	
	return $libelle_date;

	
}

/**
* 
* Fonction Récupere le nom d'un terme
* 
* @param int => $tid 
* 
* @return string 
*
*/
function mnhn_content_get_term($tid){

	//$sql='select name
	//from taxonomy_term_data  where tid=:tid';
	//$name=db_query($sql,array(':tid'=> $tid))->fetchField();
	global $language;
	$term=taxonomy_term_load($tid);
	$name=i18n_taxonomy_term_name($term, $language->language);	
	return trim($name);
}

/**
* 
* Fonction Récupere le vid d'un terme
* 
* @param int => $tid 
* 
* @return string 
*
*/
function mnhn_content_get_vid($tid){

	//$sql='select name
	//from taxonomy_term_data  where tid=:tid';
	//$name=db_query($sql,array(':tid'=> $tid))->fetchField();
	$vid=db_query('select vid from taxonomy_term_data where tid=:tid',array(':tid'=>$tid))->fetchField();	
	return $vid;
}

/**
* 
* Fonction Récupere le tid unique d'un noeud
* 
* @param nid => $nid
* @param vid => $vid  
* 
* @return string 
*
*/
function mnhn_content_get_tid($nid,$vid){
	
	$sql='select ti.tid
	from taxonomy_index ti
	INNER JOIN taxonomy_term_data td on td.tid=ti.tid and td.vid=:vid and ti.nid=:nid';
	$tid=db_query($sql,array(':vid'=> $vid,':nid'=> $nid))->fetchField();
		
	return $tid;
}

/**
* 
* Fonction Libelle Short date 
* 
* 
* @param int => timestamp 
* 
* @return string 
* exemple : 15 Sept. 2012
*/
function mnhn_content_format_date_short($timestamp) {
	global $language;
	if($language->language=='fr'){
		setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	}
	if($language->language=='de'){
		setlocale(LC_ALL, 'de_DE.utf8', 'deu');
	}
	$jour=date('d',$timestamp);
	$mois=strftime('%b', $timestamp);
	$annee=date('Y',$timestamp);

	
	
	return array('d'=>$jour,'m'=>$mois,'y'=>$annee);

	
}

/*
 * Bloc partage
 * 
 */
function mnhn_content_share(){
	if((arg(0)=='node' && arg(1)>0) || arg(0)=='blog'){

		$output=theme('mnhn_share');
		return $output;
	}

}

/*
 * Recupération uri original
 * dans le cadre d'un crop automatisé
 * 
 * @param $uri
 * 
 */
function mnhn_content_uri_original($uri){
	$ext = substr(strtolower(strrchr(basename($uri), ".")),1);
	$uri_original=substr($uri,0,strlen($uri)-4).'_0.'.$ext;
	$url_original=file_create_url($uri_original);
	$url_original_test=str_replace('http://'.$_SERVER['SERVER_NAME'].'/','',$url_original);
	if(file_exists($url_original_test)){
		return $uri_original;
	}else{
		return $uri;
	}
}

//////////////////////////////////////////////////////////////////////////////////
// PREPROCESS
///////////////////////////////////////////////////////////////////////////////////

/**
* Implements hook_preprocess_HOOK().
*/
function mnhn_content_preprocess_html(&$vars) {
	global $user;
	
	if(array_key_exists(3,$user->roles)){
  		$vars['classes_array'][] = 'admin';
	}
	
	if(arg(0)=='node' && arg(1)>0 && mnhn_content_get_content_type(arg(1))=='page'){
		$vars['classes_array'][] = 'museum article';
	}
	
	if(arg(0)=='node' && arg(1)>0 && mnhn_content_get_content_type(arg(1))=='quizz'){
		$vars['classes_array'][] = 'museum article';
	}
	
	if(arg(0)=='sitemap'){
		$vars['classes_array'][] = 'expo';
		$vars['classes_array'][] = "museum";
	}
	
	if(arg(0)=='la-lettre-du-museum'){
 		
 		$vars['classes_array'][] = "expo";
 		$vars['classes_array'][] = "museum";
 		
 	}
 	
	if(arg(0)=='search'){
 		
 		$vars['classes_array'][] = "expo";
 		$vars['classes_array'][] = "museum";
 		
 	}
	
	
	$vars['classes'] = implode(' ', $vars['classes_array']);
}

/**
 * Override or insert variables into the page templates.
 *
 * @param $variables
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
/* -- Delete this line if you want to use this function */
function mnhn_content_preprocess_page(&$variables, $hook) {
	
	global $user;
	global $language;
	
	
	$ouverture_boutique=variable_get('mnhn_boutique', '');
	

		if($ouverture_boutique==0 && !user_access('mnhn')){
			$nid_deploiement=variable_get('mnhn_deploiement_'.$language->language, '');
			$nid_deploiement=mnhn_content_autocomplete_nid($nid_deploiement);
			$link_deploiement ='/'.$language->language.'/'.drupal_get_path_alias('node/'.$nid_deploiement);
			drupal_add_js('
			
			jQuery(function() {
			
				jQuery("#menu_boutique a").click(function(){
					window.location.href="'.$link_deploiement.'";
					return false;	
				});		
			})','inline');
		
		}
	
	
	
	
	
 
}

///////////////////////////////////////////////////////////////////////////////////
// BLOC PAGE
///////////////////////////////////////////////////////////////////////////////////

/**
 * Liste des blocs interne d'une page
 * ex : paragraphe, visuel, visuel-texte, fichier, multimedia
 *
 *
 * @param $blocs => entity
 *
 */
function mnhn_content_bloc_page($blocs,$ajax=0){
	
	global $language;
	//drupal_add_css(drupal_get_path('theme','mnhn').'/css/jquery.fancybox.css');
	//drupal_add_js(drupal_get_path('theme','mnhn').'/js/jquery.fancybox.js');
	//drupal_add_js(drupal_get_path('theme','mnhn').'/js/jquery.cycle.all.js');
	//drupal_add_js(drupal_get_path('theme','mnhn').'/js/article.js');
	
	$field_bloc_item = entity_load('field_collection_item', $blocs);
	
	foreach ($field_bloc_item as $bloc ) {
		
		
		$style_block='';
		if($bloc->field_bloc_etat['und'][0]['value']==1){
			//$link_block_open='<span></span>';
			//$style_block='';
			$class_title='title_accordion selected';
		}elseif($bloc->field_bloc_etat['und'][0]['value']==2){
			//$link_block_open='<span class="down"></span>';
			//$style_block=' style="display:none"';
			$class_title='title_accordion plie';
		}else{
			$style_block=' style="display:block"';
			$class_title='title_accordion visible';
		}
		
		$output.='<div class="accordion">';
		if(!empty($bloc->field_bloc_titre['und'][0]['value'])){
			$output.='<h2 class="'.$class_title.'">'.$bloc->field_bloc_titre['und'][0]['value'].'</h2>';
		}
		
		switch($bloc->field_bloc_type['und'][0]['value']){
			case 'paragraphe':
				$output.='<div class="item" '.$style_block.'><div class="text">'.$bloc->field_bloc_paragraphe['und'][0]['value'].'</div></div>';
			break;
			
			case 'visuel':
				$uri_visuel=$bloc->field_bloc_visuel['und'][0]['uri'];
				if(!empty($uri_visuel)){
					$output.='<div class="item" '.$style_block.'>'.theme('image_style', array('style_name' => 'bloc_visuel', 'path' => $uri_visuel)).'</div>';
				}
			break;
			
			case 'file':
				if($bloc->field_bloc_file['und'][0]['fid']>0){
					$output.='<div class="item" '.$style_block.'>'.mnhn_content_list_files($bloc->field_bloc_file['und']).'</div>';
				}
				break;
				
			case 'visuel-texte':
				
				if(!empty($bloc->field_bloc_visuel_texte['und'][0]['value'])){
					$output.='<div class="item" '.$style_block.'>';
					$field_visuel_texte = entity_load('field_collection_item', array($bloc->field_bloc_visuel_texte['und'][0]['value']));
					foreach ($field_visuel_texte as $visuel_texte ) {
						
						$uri_visuel_texte=$visuel_texte->field_bloc_visuel_texte_visuel['und'][0]['uri'];
						if(!empty($uri_visuel_texte)){
							$output.=theme('image_style', array('style_name' => 'menu', 'path' => $uri_visuel_texte,'attributes'=> array('class'=> 'vignet')));
							
						}
						$output.='<div class="text text-visuel">'.$visuel_texte->field_bloc_visuel_texte_texte['und'][0]['value'].'</div>';	
					}
					$output.='</div>';
				}
				break;
				
				
			case 'animation':
				
				if(!empty($bloc->field_bloc_animation['und'][0]['value'])){
					$output.='<div class="item animation" '.$style_block.'>';
					$field_animation = entity_load('field_collection_item', array($bloc->field_bloc_animation['und'][0]['value']));
					
					foreach ($field_animation as $animation ) {
						//print_r($animation);
						
						$uri_visuel=$animation->field_bloc_animation_visuel['und'][0]['uri'];
						$uri_swf=$animation->field_bloc_animation_fichier['und'][0]['uri'];
						$dimension=$animation->field_bloc_animation_dimension['und'][0]['value'];
						$largeur=substr($dimension,0,strpos($dimension,'x'));
						$hauteur=substr($dimension,strrpos($dimension,'x')+1);
						
						if(!empty($uri_visuel)){
							$output.=theme('image_style', array('style_name' => 'menu', 'path' => $uri_visuel, 'attributes' => array('class' => 'vignet')));
						}
						$output.='<div class="text text-visuel">';
						$output.=$animation->field_bloc_animation_legende['und'][0]['value'];
						$output.='<a id="anim_'.$animation->item_id.'" class="link_anim link_media" href="#zoom_wrapper_'.$animation->item_id.'">Voir l\'animation</a></span>';	
						$output.='</div>';
						$output.='<div class="zoom_wrapper" id="zoom_wrapper_'.$animation->item_id.'">
							<div class="zoom_header">
								<div class="zoom_titre">'.$bloc->field_bloc_titre['und'][0]['value'].'</div>
							</div>
							<div id="anim_swf_'.$animation->item_id.'" ></div>
							<div class="zoom_description">'.$animation->field_bloc_animation_legende['und'][0]['value'].'</div>
						</div>';
					}
					$output.='</div>';
					
					$js.='
					jQuery(document).ready(function() {
						swfobject.embedSWF("'.file_create_url($uri_swf).'", "anim_swf_'.$animation->item_id.'", "'.$largeur.'", "'.$hauteur.'", "9.0.0");
					
						jQuery("#anim_'.$animation->item_id.'").fancybox({
							maxWidth	: 800,
							maxHeight	: 600,
							fitToView	: true,
							autoSize	: true,
							closeClick	: true,
							openEffect	: "none",
							closeEffect	: "none",
							padding	: 10
						});
						
					});	';
					
					
				}
				break;	
	
			case 'link':
				if(!empty($bloc->field_bloc_link['und'][0]['value'])){
					
					$links=array();
					foreach($bloc->field_bloc_link['und'] as $link_entity_id){
						$links[]=$link_entity_id['value'];
					}
					$field_link = entity_load('field_collection_item', $links);
					$output.='<div class="item" '.$style_block.'>'.mnhn_content_list_links($field_link).'</div>';
				}
				break;
	
				
			case 'media':
			
				if(!empty($bloc->field_bloc_media['und'][0]['value'])){
					
					$bloc_media_id=$bloc->field_bloc_media['und'][0]['value'];
					
					$output.='<div class="item animation" '.$style_block.'>';
					$medias=array();
					foreach($bloc->field_bloc_media['und'] as $media_entity_id){
						$medias[]=$media_entity_id['value'];
					}
					//print_r($medias);
					$field_media = entity_load('field_collection_item', $medias);
					
					$nb_media=0;
					$titre_media='';
					$legende_media='';
					$titre_media_long='';
					$legende_media_long='';
					$copyright_media='';
					$uri_media='';
					$video_media='';
					$podcast_media='';
					$link_media='';
					$slideshow_content='';
					$close_podcast_js='';
					$load_podcast_js='';
					$wrap_podcast='';
					
					foreach ($field_media as $media ) {
						
						$titre_media=mnhn_content_clean_teaser($media->field_bloc_media_titre['und'][0]['value'],35);
						$legende_media=mnhn_content_clean_teaser($media->field_bloc_media_legende['und'][0]['value'],100);
						$titre_media_long=$media->field_bloc_media_titre['und'][0]['value'];
						$legende_media_long=$media->field_bloc_media_legende['und'][0]['value'];
						$copyright_media=$media->field_bloc_media_copyright['und'][0]['value'];
						$uri_media=$media->field_bloc_media_visuel['und'][0]['uri'];
						$video_media=$media->field_bloc_media_video['und'][0]['value'];
						$podcast_media=$media->field_bloc_media_podcast_fichier['und'][0]['fid'];
						$link_media='<a href="javascript:;" rel="media_'.$media->item_id.'" class="link_anim link_media">'.t('Zoom !image',array('!image'=>'')).'</a>';
						$class_diaporama='diaporama';
						
						if(!empty($uri_media)){
							$nb_media++;
							if($podcast_media>0){
								$class_diaporama='';
								$link_media='<a href="javascript:;" class="link_anim link_media podcast_'.$media->item_id.'">Podcast</a>';
								
								$wrap_podcast.='<div class="podcast_wrapper"><div id="podcast_'.$media->item_id.'"></div></div>';
								
								$js.='
								    //jQuery(".node-type-collection .center-column .collection-infos a.podcast").show();
								    jwplayer("podcast_'.$media->item_id.'").setup({
									    "flashplayer": "/'.drupal_get_path('theme','mnhn').'/swf/player.swf",
									    "file": "'.file_create_url($media->field_bloc_media_podcast_fichier['und'][0]['uri']).'",
									    "duration": "'.$media->field_bloc_media_podcast_duree['und'][0]['value'].'",
									    "controlbar": "bottom",
									    "width": "515",
									    "height": "24"
									  });
									
									jQuery("#podcast_'.$media->item_id.'_wrapper").hide();
									';
								
								$load_podcast_js.='
										jQuery(".podcast_'.$media->item_id.'").toggle(function(){
											jQuery("#podcast_'.$media->item_id.'_wrapper").show();
										 },function(){
										 jQuery("#podcast_'.$media->item_id.'_wrapper").hide();
										 });
								
								';
								
								$close_podcast_js.='jQuery("#podcast_'.$media->item_id.'_wrapper").hide();';
								
							}
							
							$visuel_media=file_create_url($uri_media);
							$info_visuel_media=mnhn_content_get_image_info($visuel_media);
							if($info_visuel_media['largeur']>2000 || $info_visuel_media['hauteur']>1000){
								if($info_visuel_media['largeur']>$info_visuel_media['hauteur']){
									$imagecache='exposition';
								}else{
									$imagecache='exposition_portrait';
								}
								$visuel_imagecache=theme('image_style', array('style_name' => $imagecache, 'path' => $uri_media));
								preg_match_all('/(alt|title|src)=("[^"]*")/i',$visuel_imagecache, $result_url);
								$url_media=str_replace('"','',$result_url[2][0]);
							}else{
								$url_media=$visuel_media;
							}
							$info_visuel_def=mnhn_content_get_image_info($url_media);
							if($podcast_media>0){
								$image='<a href="javascript:;" class="podcast_'.$media->item_id.'">'.theme('image_style', array('style_name' => 'slideshow', 'path' => $uri_media)).'</a>';
							}else{
								$image='<a href="javascript:;" rel="media_'.$media->item_id.'" class="link_media">'.theme('image_style', array('style_name' => 'slideshow', 'path' => $uri_media)).'</a>';
							}
							$slideshow_content.='<div class="slideshow_legende_info  '.$class_diaporama.'" id="media_'.$media->item_id.'"><span class="hauteur">'.$info_visuel_def['hauteur'].'</span><span class="largeur">'.$info_visuel_def['largeur'].'</span><span class="titre_long">'.$titre_media_long.'</span><span class="description_long">'.$legende_media_long.'</span><span class="titre">'.$titre_media.'</span><span class="description">'.$legende_media.'</span><span class="link">'.$link_media.'</span><span class="url">'.$url_media.'</span><span class="copyright">'.$copyright_media.'</span></div><div class="item_media">'.$image."</div>\n";
						
						}elseif(!empty($video_media)){
							$nb_media++;
							$link_media='<a href="javascript:;" rel="media_'.$media->item_id.'" class="link_anim link_media vimeo">'.t('Zoom !video',array('!video' => '')).'</a>';
							$slideshow_content.='<div class="slideshow_legende_info '.$class_diaporama.' vimeo" id="media_'.$media->item_id.'"><span class="largeur">640</span><span class="largeur">480</span><span class="titre_long">'.$titre_media_long.'</span><span class="description_long">'.$legende_media_long.'</span><span class="vimeo_id">'.$video_media.'</span><span class="titre">'.$titre_media.'</span><span class="link">'.$link_media.'</span><span class="description">'.$legende_media.'</span><span class="copyright">'.$copyright_media.'</span></div><div class="item_media"><iframe src="http://player.vimeo.com/video/'.$video_media.'" width="365" height="245" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'."</div>\n";
						
						}
						
						
							
					}
					
					$js.=' jQuery("#slideshow_'.$bloc_media_id.'").cycle({
					        fx:     "fade",
					        speed:  "slow",
					        timeout: 0,
					        prev: "#slideshow_prev_'.$bloc_media_id.'",
							next: "#slideshow_next_'.$bloc_media_id.'",
							pager: "#slideshow_nav_'.$bloc_media_id.'", 
							slideExpr: ".item_media",
							after : onAfter_'.$bloc_media_id.',
							before : onBefore_'.$bloc_media_id.'
					    });
				
					   
					   function onBefore_'.$bloc_media_id.'(curr,next,opts) {
					   		
							jQuery("#slideshow_'.$bloc_media_id.' .titre_legende,#slideshow_'.$bloc_media_id.' .description_legende,#slideshow_'.$bloc_media_id.' .titre_legende_long,#slideshow_'.$bloc_media_id.' .description_legende_long,#slideshow_'.$bloc_media_id.' .link_multimedia").hide();
							jQuery("#copyright_'.$bloc_media_id.'").html("&nbsp;");
							'.$close_podcast_js.'
						}
					   
					   function onAfter_'.$bloc_media_id.'(curr,next,opts) {
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .titre_legende").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.titre").html());
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .description_legende").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.description").html());
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .titre_legende_long").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.titre_long").html());
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .description_legende_long").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.description_long").html());
						
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .link_multimedia").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.link").html());
							jQuery("#copyright_'.$bloc_media_id.'").html(jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info:eq("+opts.currSlide+") span.copyright").html());
							jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende .titre_legende, #slideshow_'.$bloc_media_id.' .slideshow_legende .description_legende, #slideshow_'.$bloc_media_id.' .slideshow_legende .link_multimedia" ).fadeIn("fast");
							
							'.$load_podcast_js.'
						}
						
						
							jQuery("#slideshow_'.$bloc_media_id.' .link_media, #zoom_wrapper_'.$bloc_media_id.' .link_media").live("click",function(){
									jQuery.fancybox.showLoading();
									var id=jQuery(this).attr("rel");
									if(jQuery(this).hasClass("vimeo")){
										var video=1;
										var image="http://'.$_SERVER['SERVER_NAME'].'/sites/all/themes/mnhn/pics/fancybox/blank.gif";
									}else{
										var video=0;
										var image=jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .url").html();
									}
									jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_next,#zoom_wrapper_'.$bloc_media_id.' .zoom_prev").removeClass("vimeo").removeClass("visible").hide();
									jQuery.loadImages(image,function() {
											
										var largeur_fenetre=parseInt(jQuery(window).width());
										var hauteur_fenetre=parseInt(jQuery(window).height());	
											
										var largeur_init=parseInt(jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .largeur").html());
										var hauteur_init=parseInt(jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .hauteur").html());	

										var largeur_def=largeur_init;
										var hauteur_def=hauteur_init;		
										
											
										if(video==0){

											if(largeur_init>hauteur_init){			
												if(largeur_fenetre<(largeur_init+100)){
													largeur_def=largeur_fenetre-100;
													hauteur_def=Math.floor((hauteur_init/largeur_init)*largeur_def);	
										    	}
													
												if(hauteur_fenetre<(hauteur_init+300)){
													hauteur_def=hauteur_fenetre-300;
													largeur_def=Math.floor((largeur_init/hauteur_init)*hauteur_def);	
												}	
											}else{
												if(hauteur_fenetre<(hauteur_init+300)){
													hauteur_def=hauteur_fenetre-300;
													largeur_def=Math.floor((largeur_init/hauteur_init)*hauteur_def);	
												}				
											}			
											
											jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_img").html("").append(\'<img src="\'+image+\'" width="\'+largeur_def+\'" height="\'+hauteur_def+\'"/>\');
										}else{
																
											
											largeur_def=largeur_fenetre-100;
											hauteur_def=Math.floor((hauteur_fenetre/largeur_fenetre)*largeur_def);		
									    	
											if(hauteur_fenetre<(hauteur_def+300)){
												hauteur_def=hauteur_fenetre-300;
												largeur_def=Math.floor((largeur_fenetre/hauteur_fenetre)*hauteur_def);	
											}	
													
											jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_img").html("").append(\'<iframe src="http://player.vimeo.com/video/\'+jQuery("#"+id+" .vimeo_id").html()+\'?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff" width="\'+largeur_def+\'" height="\'+hauteur_def+\'" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> \');
										
										}
										
										
								    	jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_titre").html(jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .titre_long").html());
								    	jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_copyright").html(jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .copyright").html());
								    	jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_description").html(jQuery("#slideshow_'.$bloc_media_id.' #"+id+" .description_long").html());
								    	
								    	
										
								    	
								    			
								    	jQuery.fancybox.open( jQuery("#zoom_wrapper_'.$bloc_media_id.'"),{
									    	padding : 20, 
									    	width : "auto", 
									    	height : "auto", 
								    		autoWidth : true,	
									    	autoSize : true,
								    		autoSize : true,
									    	openEffect : "none",
											closeEffect : "none",
								    		beforeShow   : function(){
								    			
								    		},		
											beforeLoad  : function(){
											    		jQuery.fancybox.hideLoading();
														jQuery(".fancybox-wrap,.fancybox-inner,.zoom_wrapper").css({"overflow-x":"hidden"});
								    			
								    					if(largeur_def<400){
								    						largeur_def=400;
								    					}
								    					jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_copyright, #zoom_wrapper_'.$bloc_media_id.' .zoom_description, #zoom_wrapper_'.$bloc_media_id.' .zoom_titre").width(largeur_def-20);
								    							
														//jQuery("#zoom_detail_wrapper_'.$block_media_id.' #zoom_titre").html(jQuery("#wrapper_"+id+" .titre").html());
								    					var nb_item=jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info.diaporama").length;
														
													
								    							
								    							
														if(nb_item>1){
															var pos=jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info.diaporama").index( jQuery("#"+id)[0] );
															
															if(pos<(nb_item-1)){
																var next=jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info.diaporama:eq("+(pos+1)+")");
																
																jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_next").show().attr("rel",next.attr("id"));
																if(next.hasClass("vimeo")){
																	jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_next").addClass("vimeo");
																}
															}
															if(pos>0){
																var prev=jQuery("#slideshow_'.$bloc_media_id.' .slideshow_legende_info.diaporama:eq("+(pos-1)+")");
																jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_prev").show().attr("rel",prev.attr("id"));
																if(prev.hasClass("vimeo")){
																	jQuery("#zoom_wrapper_'.$bloc_media_id.' .zoom_prev").addClass("vimeo");
																}
															}
														}
													} 
				
										});
								    	 
							    	});
						    	
							});
					';
					
					if($nb_media==1){
						$js.='
						var opts_'.$bloc_media_id.' = {currSlide : 0};
						onAfter_'.$bloc_media_id.'("","",opts_'.$bloc_media_id.');
						jQuery("#slideshow_prev_'.$bloc_media_id.'").hide();
						jQuery("#slideshow_next_'.$bloc_media_id.'").hide();
						jQuery("#slideshow_'.$bloc_media_id.' .item_media").css({"position": "absolute", "top": "0px", "left": "0px", "display": "block","z-index": "6", "opacity": "1", "width": "365px", "height": "249px"});	
						';
					}
					
					$output.='
						<div class="slideshow" id="slideshow_'.$bloc_media_id.'">
							<span class="slideshow_prev" id="slideshow_prev_'.$bloc_media_id.'"></span>
							<span class="slideshow_next" id="slideshow_next_'.$bloc_media_id.'"></span>
						    '.$slideshow_content.'
						    <div class="slideshow_legende">
						    	<h3 class="titre_legende"></h3>
	    						<p class="description_legende"></p>
	    						<h3 class="titre_legende_long long_text"></h3>
	    						<p class="description_legende_long long_text"></p>
	    						<div class="link_multimedia"></div>
						    	
						    </div>     
						</div>
						<p class="cartouche" id="copyright_'.$bloc_media_id.'"></p>
						<div class="slideshow_nav" id="slideshow_nav_'.$bloc_media_id.'"></div>
						'.$wrap_podcast.'
						<div class="zoom_wrapper" id="zoom_wrapper_'.$bloc_media_id.'">
							<a class="link_media zoom_prev" id="zoom_prev_'.$bloc_media_id.'"></a>
							<a class="link_media zoom_next" id="zoom_next_'.$bloc_media_id.'"></a>
							<div class="zoom_header">
								<div class="zoom_titre"></div>
							</div>
							<div class="zoom_img" style="text-align:center"></div>
							<div class="zoom_bottom">
								<div class="zoom_copyright"></div>
								<div class="zoom_description"></div> 
							</div>
						</div>
						
					</div>';
				}
				
				break;	
				
				
				case 'podcast':
			
				if(!empty($bloc->field_bloc_podcast['und'][0]['value'])){
					$output.='<div class="item" '.$style_block.'>';
					
						$field_podcast = entity_load('field_collection_item', array($bloc->field_bloc_podcast['und'][0]['value']));
					
						foreach ($field_podcast as $podcast ) {
							
							
							$output.='<div id="podcast_'.$podcast->item_id.'"></div><br/>';
									
									$js.='
									    jwplayer("podcast_'.$podcast->item_id.'").setup({
										    "flashplayer": "/'.drupal_get_path('theme','mnhn').'/swf/player.swf",
										    "file": "'.file_create_url($podcast->field_bloc_podcast_fichier['und'][0]['uri']).'",
										    "duration": "'.$podcast->field_bloc_podcast_duree['und'][0]['value'].'",
										    "controlbar": "bottom",
										    "width": "515",
										    "height": "24"
										  });
										';
									
						}
							
							
						
					$output.='</div>';
							
					}
					
				
				break;	
				
				
				
				
				case 'video':
			
					if(!empty($bloc->field_bloc_video['und'][0]['value'])){
						$output.='<div class="item" '.$style_block.'><iframe src="http://player.vimeo.com/video/'.$bloc->field_bloc_video['und'][0]['value'].'" width="515" height="386" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div>';
					}

				break;	
				
				case 'quiz':
					
					if($bloc->field_bloc_quiz['und'][0]['nid']>0){
						
						$quiz=node_load($bloc->field_bloc_quiz['und'][0]['nid']);
						if($quiz->status==1){
							$output.='<div class="item animation" '.$style_block.'>';
							
							$uri_visuel=$quiz->field_quiz_visuel['und'][0]['uri'];
							if(!empty($uri_visuel)){
								$output.=theme('image_style', array('style_name' => 'vignette_oeuvre', 'path' => $uri_visuel, 'attributes' => array('class' => 'vignet')));
							}
							$output.='<div class="text text-visuel">';
							$output.=$quiz->field_quiz_accroche['und'][0]['value'];
							$output.='<a id="quizz_'.$quiz->nid.'" href="/'.$language->language.'/quizz/'.$quiz->nid.'" data-fancybox-type="iframe" class="link_anim link_media">'.t('Play the quiz').'</a>';	
							$output.='</div>';
							$output.='</div>';
							
							drupal_add_js('
							jQuery(function() {
							
								

								jQuery("#quizz_'.$quiz->nid.'").fancybox({
									minHeight : 550, 
									width : 	570,
									closeBtn	: true,
									closeClick	: true,
									openEffect	: "none",
									closeEffect	: "none",
									padding	: 0,
									beforeLoad  : function(){
										jQuery(".fancybox-wrap,.fancybox-inner,.page-node-quiz-").css({"overflow-x":"hidden"});
										
									}
								});
							});','inline');
							
							
						}
					}
					break;
					
				}
				$output.='</div>';
		
	}
	
	if($ajax==1){
		$output.='<script type="text/javascript">
			jQuery(function() {
			jQuery(".accordion .selected,.accordion .visible").next(".item").show();
    		jQuery(".accordion .selected").next(".encart").show();
				'.$js.'
			});</script>';
		
	}else{	
		drupal_add_js('
			jQuery(function() {
				'.$js.'
			});','inline');
		}
	
	return '<div class="bloc_page_wrapper">'.$output.'</div>';
	
	
}

///////////////////////////////////////////////////////////////////////////////////
// BLOC COLONNE DE DROITE
///////////////////////////////////////////////////////////////////////////////////

/*
 * 
 * Bloc homepage
 * 
 */
function mnhn_content_bloc_home(){
	global $language;
	$bloc_venir_museum = variable_get('mnhn_bloc_venir_museum_'.$language->language, array());
	$bloc_venir_museum_link = variable_get('mnhn_bloc_venir_museum_link_'.$language->language, '');
	$output='<div class="wrap_bloc_mnhn">
                    	<div id="bloc_newsletter" class="bloc_mnhn ">
							<div class="abonnement">
                    		<h3><a href="javascript:;" style="cursor:pointer">'.t('!span_start Subscribe !span_end to !strong_start e-news !strong_end',array('!span_start'=> '<span>','!span_end'=> '</span><br>','!strong_start'=>'<strong>','!strong_end'=>'</strong>')).'</a></h3>
                    		</div>
							<div class="inscription" >
								<h3><a href="#">'.t('!span_start Fill !span_end !strong_start your e-mail !strong_end',array('!span_start'=> '<span class="small">','!span_end'=> '</span><br>','!strong_start'=>'<strong>','!strong_end'=>'</strong>')).'</a></h3>';
								/*
								<input type="text"><a href="javascript:;" id="valid_inscription_newsletter">OK</a>';
								*/
	
								$output.=drupal_render(drupal_get_form('mnhn_newsletter_subscribe_form'));
								
								$output.='<a href="/fr/la-lettre-du-museum" id="archives_newsletter">> '.t('Consult the archives').'</a>
							</div>
							<div class="bloc_content">
                                <img src="/sites/all/themes/mnhn/pics/visuels/lettre.png" alt="" />
                    		</div>
							
            			</div>
                    </div>                

                    <div class="wrap_bloc_mnhn">
                    	<div id="musee_pratik" class="bloc_mnhn ">
                            <a href="/'.drupal_get_path_alias('node/'.mnhn_content_autocomplete_nid($bloc_venir_museum_link)).'" title="'.t('Visit us').'"><img src="/sites/all/themes/mnhn/pics/fonds/carte.jpg" alt="" /></a>
                    		<div class="bloc_content">
                        		<h3><a href="/'.$language->language.'/'.drupal_get_path_alias('node/'.mnhn_content_autocomplete_nid($bloc_venir_museum_link)).'" title="'.t('Visit us').'">'.t('Visit us').'</a></h3>
                        		'.$bloc_venir_museum['value'].'
                    		</div>
            			</div>
            			 
                    </div>
                    ';
	$blocs_liste=mnhn_content_bloc_liste();
	
     
     /* TODO bloc resa */
	$output.=theme('mnhn_bloc',array('title' => t('workshops, visits, educational projects, school bookings'),'content' => mnhn_content_bloc_content('bloc_resa'),'bloc_id' => 'bloc_resa', 'state' => 0));
	//$output.=theme('mnhn_bloc',array('title' => t('Workshops, performances, talks and special events'),'content' => mnhn_content_bloc_content('bloc_resa'),'bloc_id' => 'bloc_resa', 'state' => 0));
	
	$output.=theme('mnhn_bloc',array('title' => t('Shop'),'content' => mnhn_content_bloc_content('bloc_boutique'),'bloc_id' => 'bloc_boutique', 'state' => 0));
	
	$output.= '<div class="home_expo_iti">';

	$output.= '<a href="expositions-itinerantes" class="link_home_expo_iti">Expositions itinérantes</a>';

	$output.= '</div>';
	
	return $output;
}

/*
 *
* Bloc colonne de droite
*
*/
function mnhn_content_bloc(){
		global $language;
		global $user;
		
		if(arg(0)=='node' && arg(1)>0){
			
			$default_bloc_override=variable_get('mnhn_bloc_right_'.arg(1), array());
				if($default_bloc_override[1]==1){
					$mlid='node'.arg(1);
				}else{
					if(mnhn_content_get_content_type(arg(1))=='blog'){
						$mlid='blog';
					}else{
						$mlid=mnhn_content_menu_mlid();
					}
				}
				/*			
			$nid_deploiement=variable_get('mnhn_deploiement_'.$language->language, '');
			if($user->uid==0 && mnhn_content_autocomplete_nid($nid_deploiement)>0){
				exit;
				$mlid='contact-'.$language->language;
			}
			*/
							
		}elseif(arg(0)=='blog' || arg(0)=='taxonomy'){
			$mlid='blog-'.$language->language;
		}elseif(arg(0)=='sitemap'){
			$mlid='sitemap-'.$language->language;	
		}elseif(arg(0)=='contacts'){
			$mlid='contact-'.$language->language;
		}elseif(arg(0)=='numeritheque'){
			$mlid=constant("MLID_NUMERITHEQUE_".strtoupper($language->language));
		}elseif(arg(0)=='boutique'){
			$mlid=constant("MLID_BOUTIQUE_".strtoupper($language->language));
		}elseif(arg(0)=='cart' || arg(0)=='checkout' || arg(0)=='paiement'){
			$mlid='panier-'.$language->language;
		}elseif(arg(0)=='user'){
			$mlid='user-'.$language->language;
		}elseif(arg(0)=='la-lettre-du-museum'){
			$mlid='lettre-'.$language->language;
		}elseif(arg(0)=='search'){
			$mlid='search-'.$language->language;
		}else{
			$mlid=mnhn_content_menu_mlid();
		}
		
		/*
		$output='&nbsp;';
		
		if(arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='visite'){
			$output.=theme('mnhn_bloc',array('title' => '<a href="javascript:window.print();">Imprimer la fiche</a>','content' => '','bloc_id' => 'bloc_fiche', 'state' => 0));
		}else{
			$output.=theme('mnhn_share');
		}
		*/
		//$test=variable_get('mnhn_bloc_bloc-fr_bloc_pratik', array());
		//print_r($test);
		//exit;
		
		if($mlid>0 || substr($mlid,0,4)=='node' || $mlid=='blog-'.$language->language || $mlid=='contact-'.$language->language || $mlid=='sitemap-'.$language->language || $mlid=='panier-'.$language->language || $mlid=='user-'.$language->language || $mlid=='lettre-'.$language->language || $mlid=='search-'.$language->language){
		

		
		
		$blocs=mnhn_content_bloc_liste();
		
	   foreach($blocs as $key => $value){
	   		
	   		$blocs_selected=variable_get('mnhn_bloc_'.$mlid.'_'.$key, array());
	   		//$blocs_global=variable_get('mnhn_bloc_bloc-'.$language->language.'_'.$key, array());
	   		
	   		
	   		if($blocs_selected[$key]===$key ){
	   		
	   			$bloc_state=0;
	   			$bloc_title=$value[0];
	   			if($value[1]==1){
	   				$bloc_state=variable_get('mnhn_bloc_'.$mlid.'_'.$key.'_state', 0);
	   			}
	   			
	   			$bloc_content=mnhn_content_bloc_content($key);
	
	   			if($key=='bloc_libre'){
	   				/*
	   				$bloc_content='';
	   				$bloc_title=variable_get('mnhn_bloc_'.$mlid.'_'.$key.'_title', '');
	   				if(!empty($bloc_title)){
		   				$bloc_content=theme('image_style', array('style_name' => 'bloc', 'path' => variable_get('bloc_image_url_'.$mlid,'')));
		   				$bloc_content.='<div class="bloc_content">'.variable_get('mnhn_bloc_'.$mlid.'_'.$key.'_texte', '').'</div>';
	   				}
	   				*/
	   			}
	   			
	   			if($bloc_content!=''){
	   				$output.=theme('mnhn_bloc',array('title' => $bloc_title,'content' => $bloc_content,'bloc_id' => $key, 'state' => $bloc_state[0]));
	   			}
	   		}
	   }
	   
	 
	   
	
	
		}
		
		return $output;
}

/*
 *
* Liste des blocs
*
*/
function mnhn_content_bloc_liste(){
	global $language;
	$blocs=array(
		//'bloc_libre' => array('Libre',1),
		'bloc_pratik' => array(t('Visit us'),1),
	    'bloc_agenda' => array(t('Calendar'),1),
		'bloc_collecs' => array(t('The collection database'),1),	
		'bloc_blog' => array('Le Blog',0),
		'bloc_resa' => array(t('Ateliers, spectacles, rencontres, événements...'),0),
		'bloc_boutique' => array(t('Boutique'),0),
			
	);
	
	return $blocs;
}

/*
 *
* Contenus des blocs
* 
* @param => $id
*
*/
function mnhn_content_bloc_content($id){
	global $language;
	global $user;
	switch($id){
		case 'bloc_pratik':
			$bloc_infos_pratiques = variable_get('mnhn_bloc_info_pratique_'.$language->language, array());
			$bloc_venir_museum_link = variable_get('mnhn_bloc_venir_museum_link_'.$language->language, '');
	   		$bloc_content='<a href="/'.drupal_get_path_alias('node/'.mnhn_content_autocomplete_nid($bloc_venir_museum_link)).'" title="Venir au Muséum"><img src="/sites/all/themes/mnhn/pics/visuels/carte.jpg" alt="" /></a>
	   		<div class="bloc_content">'.$bloc_infos_pratiques['value'].'</div>';	
		break;
		
		case 'bloc_collecs':
			
			
			$ouverture_bdd_collection=variable_get('mnhn_bdd_collection', '');
			
			if($ouverture_bdd_collection==0){
				$nid_deploiement=variable_get('mnhn_deploiement_'.$language->language, '');
				$nid_deploiement=mnhn_content_autocomplete_nid($nid_deploiement);
				$link_collection = '/'.$language->language.'/'.drupal_get_path_alias('node/'.$nid_deploiement);
			
			}else{
				$link_collection = variable_get('mnhn_bloc_link_collection_'.$language->language, '');
			}
			
	   		$bloc_content='<div class="bloc_content"><img src="/sites/all/themes/mnhn/pics/visuels/collecs_colright.png" alt="" />
			<a href="'.$link_collection.'" class="link" target="_blank">'.t('More').'</a></div>';		
		break;
	
   			
		case 'bloc_agenda':
			//$bloc_content=mnhn_agenda_calendar_bloc();	
		break;
   			
   		case 'bloc_blog':
   			
		$sql = 'SELECT n.nid FROM node n
		INNER JOIN field_data_field_blog_date b 
		on b.entity_id=n.nid 
		and n.status=:status and n.language=:language
		order by b.field_blog_date_value desc';
		$nid_blog=db_query($sql,array(':language' => 'fr', ':status' => 1))->fetchField();

		$blog=node_load($nid_blog);
		$blog_uri=$blog->field_blog_visuel['und'][0]['uri'];  
		if(!empty($blog_uri)){
			$blog_image=theme('image_style', array('style_name' => 'bloc_blog', 'path' => $blog_uri));
		}


   			
			$bloc_content='<div class="entete">
                                <h3><a href="/fr/blog" title="Le Blog">'.t('Blog').':</a></h3>
                                <h2><a href="/fr/'.drupal_get_path_alias('node/'.$nid_blog).'" title="'.$blog->title.'">«'.mnhn_content_clean_teaser($blog->title,20).'»</a></h2>
                            </div>
                    	<div class="bloc_content">
                                <a href="/fr/'.drupal_get_path_alias('node/'.$nid_blog).'" title="'.$blog->title.'">'.$blog_image.'</a>
                                
            </div>';			
		break;
		
		
		
		case 'bloc_resa':
			
			
			$ouverture_resa=variable_get('mnhn_resa', '');
			
			if($ouverture_resa==0){
				$nid_deploiement=variable_get('mnhn_deploiement_'.$language->language, '');
				$nid_deploiement=mnhn_content_autocomplete_nid($nid_deploiement);
				$link_reservation = '/'.$language->language.'/'.drupal_get_path_alias('node/'.$nid_deploiement);
			
			}else{
				$link_reservation='#';
			}
			
			
			/* TODO bloc resa */
			$link_school = '/fr/enseignants/expositions-et-ateliers';
			$bloc_content='<div class="bloc_content">
                                <h2><a href="'.$link_school.'" class="bglnk">'.t('Education').'</a></h2>
                                <img src="/sites/all/themes/mnhn/pics/visuels/fourmis_small.png" alt="" />
                                </div>';
		    /*$bloc_content='<div class="bloc_content">
                            <h2><a href="'.$link_reservation.'" class="bglnk">'.t('Buy tickets').'</a></h2>
                            <img src="/sites/all/themes/mnhn/pics/visuels/fourmis_small.png" alt="" />
                            </div>';	
            */
		break;
			
		case 'bloc_boutique':
			$nid_produit=mnhn_content_autocomplete_nid(variable_get('mnhn_boutique_produit_une_'.$language->language, '0'));
			if($nid_produit==0){
				$sql = 'SELECT n.nid FROM node n
				where n.status=:status and n.language=:language and n.type=:type
				order by RAND()';
				$nid_produit=db_query($sql,array(':type' => 'produit', ':language' => $language->language, ':status' => 1))->fetchField();
			}	
			$ouverture_boutique=variable_get('mnhn_boutique', '');
			if($user->uid==0 && $ouverture_boutique==0){
				$nid_deploiement=variable_get('mnhn_deploiement_'.$language->language, '');
				$nid_deploiement=mnhn_content_autocomplete_nid($nid_deploiement);
				$link_boutik = '/'.$language->language.'/'.drupal_get_path_alias('node/'.$nid_deploiement);
				
					
			}else{
				$link_boutik='/'.$language->language.'/'.drupal_get_path_alias('node/'.$nid_produit).'';
			}
			
			$bloc_content='<div class="bloc_content">';
			if($nid_produit>0){
				$produit=node_load($nid_produit);
				$uri_visuel=$produit->field_produit_image['und'][0]['uri'];
				$uri_original=mnhn_content_uri_original($uri_visuel);
				$sstitre=$produit->field_produit_sous_titre['und'][0]['value'];
				$product_id=$node->field_product_produit['und'][0]['product_id'];
				if(arg(0)=='node' && arg(1)==''){
					$visuel=theme('image_style', array('style_name' => 'produit_bloc_front', 'path' => $uri_original));
					$bloc_content.='<a href="'.$link_boutik.'" title="'.$produit->title.'">'.$visuel.'</a>
							<div class="text">
	                               <h4><a href="'.$link_boutik.'" title="'.$produit->title.'">'.mnhn_content_clean_teaser($produit->title,20).'</a></h4>
	                               <h5><a href="'.$link_boutik.'" title="'.$produit->title.'">'.$sstitre.'</a></h5>
	                          </div>';
				}else{
					$visuel=theme('image_style', array('style_name' => 'produit_bloc', 'path' => $uri_original));
					$product_id=$produit->field_product_produit['und'][0]['product_id'];
					if($product_id>0){
						$product=commerce_product_load($product_id);
						$sku=$product->sku;
						$price=number_format($product->commerce_price['und'][0]['amount']/100,2,',','');
						$currency=$product->commerce_price['und'][0]['currency_code'];
					}
					$bloc_content.='<a href="'.$link_boutik.'" title="'.$produit->title.'">'.$visuel.'</a>
							<div class="text">
	                               <h4><a href="'.$link_boutik.'" title="'.$produit->title.'">'.mnhn_content_clean_teaser($produit->title,80).'</a></h4>
	                               <h5><a href="'.$link_boutik.'" title="'.$produit->title.'">'.$sstitre.'</a></h5>
	                               	<div class="price">'.$price.' €</div>	
	                          </div>';
				}
				
			}
			
					// /'.$language->language.'/'.drupal_get_path_alias('boutique').'
              $bloc_content.='<a class="link_boutique" href="'.$link_boutik.'">'.t('Shop now').'</a>
              </div>';

			
		break;
		
		
   			
   	
   		
   	}
	
	return $bloc_content;
}

/*
 *
* BO AJAX
* Autocompletion selection contenu
*
*/
function mnhn_content_autocomplete_link($string = ''){
	
	 global $language;
	  $matches = array();
 
  // Some fantasy DB table which holds cities
  $query = db_select('node', 'n');

  // Select rows that match the string
  $return = $query
    ->fields('n', array('nid','title'))
    ->condition('n.status', '1')
    ->condition('n.language', $language->language)
    ->condition('n.title', '%' . db_like($string) . '%', 'LIKE')
    ->condition('n.type', array('page', 'collection', 'exposition','oeuvre_une'), 'IN')
    ->range(0, 10)
    ->execute();

  // add matches to $matches 
  foreach ($return as $row) {
    $matches[$row->title.' ['.$row->nid.']'] = check_plain($row->title);
  }
 
  // return for JS
  drupal_json_output($matches);
  
	
  
	
}

///////////////////////////////////////////////////////////////////////////////////
// NEWSLETTER
///////////////////////////////////////////////////////////////////////////////////

/*
 * BLoc newsletter
 * 
 */
function mnhn_content_bloc_newsletter($bloc_newsletter){
	
		$liste_blocs=mnhn_content_bloc_liste();
		
	   foreach($bloc_newsletter as $key => $value){

	   			
	   			
	   			$bloc_content=mnhn_content_bloc_content(trim($value));
	   			

	   			if($bloc_content!=''){
	   				
	   				$bloc_title=$liste_blocs[trim($value)][0];
	   				$output.=theme('mnhn_bloc',array('title' => $bloc_title,'content' => $bloc_content,'bloc_id' => trim($value), 'state' => 1));
	   			}
	   }
	
	  
	   
	return $output;
	
		
}

/*
 * Liste des archives newsletter
 * 
 */
function mnhn_content_lettre_archives(){
	
	global $language;
	
	
                  
	
	if($language->language=='fr'){
		setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	}
	
	$query=db_select('node','n')->extend('PagerDefault');
	$query->fields('n',array('nid', 'created'));
	$query->condition('status',1);
  $query->condition('type','newsletter');
	$query->condition('n.language',$language->language);
  $query->orderBy('created', 'DESC');
	$query->limit(5);
	$result=$query->execute();
	
	foreach($result as $row){
	
		$node=node_load($row->nid);
		$image='';
    	$uri=$node->field_lettre_visuel_archive['und'][0]['uri'];
    	
		if(!empty($uri)){
			$image=theme('image_style', array('style_name' => 'menu', 'path' => $uri,'attributes'=>array('class'=>'vignet')));
		}
		$text=$node->field_chapo['und'][0]['value'];
		$output.=theme('list_expo', array('nid' => $node->nid,'title' => $node->title,'subtitle' => '','image'=> $image,  'chapo' => $text,'type' => '','attributes'=>array('class'=>'vignet')));
			
		
	}
	
	
	
	return   '<div id="wrapper-exposition"> 
                    <div class="page-header">      
                        <h3>Archives Lettre du Muséum</h3>
                    </div>
                    <div class="page-detail-wrapper">
                        <div class="sommaire">'.$output.theme('pager').'
                        </div>
                   </div>
                   </div>';
	
	
} 

/*
 * Background newsletter
 * 
 */
function mnhn_content_lettre_bkg($nid){
	$uri=db_query('select f.uri from file_managed f INNER JOIN field_data_field_lettre_visuel l on f.fid=l.field_lettre_visuel_fid and l.entity_id=:nid',array(':nid'=>$nid))->fetchField();
	if(!empty($uri)){
		return file_create_url($uri);
	}
}

function mnhn_content_test_system(){
	
	$sql = 'SELECT filename,name FROM system where type=:type';
	$result=db_query($sql,array(':type'=>'module'));

	foreach($result as $row){
		if(!file_exists($row->filename)) {
			$output.=$row->name.' : '.$row->filename.'<br/>';
		}
	}
	
	return $output;
	
	
}
