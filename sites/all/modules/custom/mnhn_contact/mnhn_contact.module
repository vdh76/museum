<?php



///////////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////////



/**
 * Implementation of hook_menu()
 */
function mnhn_contact_menu() {

   $items['contacts'] = array(
    'title' => 'Contacts',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_contact_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  

  $items['admin/mhnh/contact'] = array(
    'title' => 'Contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_contact_admin_mail_settings'),
    'access arguments' => array('mnhn'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mnhn_contact_admin.inc',
    'description' => 'Email  / Bloc footer formulaire contact / Thematiques rÃ©servation',
    'weight' => 9,
  );
  
  
  $items['admin/mhnh/contact/email'] = array(
    'title' => 'Destinataires emails',
     'type' => MENU_DEFAULT_LOCAL_TASK,
     'weight' => -10,
  );
  

  
  $items['admin/mhnh/contact/text'] = array(
    'title' => 'Textes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_contact_admin_textes_settings'),
    'access arguments' => array('mnhn'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'mnhn_contact_admin.inc',
  'weight' => -8,
   
  );
  
   
  
  
  return $items;
}

/**
 * Implementation of hook_mail()
 */
function mnhn_contact_mail($key, &$message, $params) {
	global $user;

	// Each message is associated with a language, which may or may not be the
	// current user's selected language, depending on the type of e-mail being
	// sent. This $options array is used later in the t() calls for subject
	// and body to ensure the proper translation takes effect.
	$options = array(
			'langcode' => $message['language']->language,
	);

	switch ($key) {
		// Send a simple message from the contact form.
		case 'contact':
			$message['subject'] = $params['objet'];
			// Note that the message body is an array, not a string.
			// Because this is just user-entered text, we do not need to translate it.

			// Since user-entered text may have unintentional HTML entities in it like
			// '<' or '>', we need to make sure these entities are properly escaped,
			// as the body will later be transformed from HTML to text, meaning
			// that a normal use of '<' will result in truncation of the message.
			$message['body'][] = $params['message'];
			break;
	}
}


///////////////////////////////////////////////////////////////////////////////////
// FORMULAIRE CONTACT
///////////////////////////////////////////////////////////////////////////////////

/**
 * Liste des objets
 */
function mnhn_content_objet(){
	
	return array(
	'0' => t('- Select -'),
	'groupe' => t('Group reservation'),
	'espace' => t('Private hire'),
	'mediation' => t('Education'),
	'boutique' => t('Shop'),
	'autre' => t('Other request')
  );
	
	
}



/**
 * Formulaire contact
 *
 *
 */
function mnhn_contact_form() {

	global $language;
	drupal_add_js('
		jQuery(function() {
			
			
				jQuery("#contact_submit").click(function(){
							
							
							
							var error_miss=0;
							var error_wrong=0;
							var message_miss="";
							var message_wrong="";
							
							jQuery("#mnhn-contact-form,.spam").css("opacity", 0.5);
							 
							 jQuery(".section-contacts .loading").show();
			
							if(jQuery("#edit-objet").val()==0){
								error_miss=1;
								message_miss+="- '.t('Subject').'\n";
							}
							 
							if(jQuery("#edit-prenom").val()==0){
								error_miss=1;
								message_miss+="- '.t('First name').'\n";
							}
							
							if(jQuery("#edit-nom").val()==0){
								error_miss=1;
								message_miss+="- '.t('Last name').'\n";
							}
							
							
							
							if(jQuery("#edit-email").val()==0){
								error_miss=1;
								message_miss+="- '.t('Email').'\n";
							}else{
								   var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
								   var address = jQuery("#edit-email").val();
								   if(reg.test(address) == false) {
									   	error_wrong=1;
										message_wrong+="'.t('email format is incorrect').'.\n"; 
								   }
								
							}	
								
							
							if(jQuery("#edit-message").val().length==0){
								
									error_miss=1;
									message_miss+="- '.t('Message').'\n";
							}
											
											
							if(jQuery("#recaptcha_response_field").val()==0){
								error_miss=1;
								message_miss+="- '.t('Confirmation characters').'.\n";
							}
							
							 var chal = Recaptcha.get_challenge();
							 var resp =  Recaptcha.get_response();   
							
							if(error_wrong>0 || error_miss>0){
										  	 
								jQuery("#mnhn-contact-form,.spam").css("opacity", 1);
								jQuery(".section-contacts .loading").hide();
								if(error_miss>0){
									message_miss="'.t('Following fields are missing').' :\n"+message_miss;
				   				} 
								alert(message_miss+"\n"+message_wrong);
							 }else{		
							 
							 
									jQuery.ajax({
										  url: "/captcha",
										  type: "POST",
										  data: {challenge:chal ,response:resp},
										  dataType: "html",
										  success: function(data){
											  if(data!="ok"){
												  error=1;
												  message_miss+="'.t('Confirmation characters are wrong').'.\n";
												  alert(message_miss);
												  Recaptcha.reload();
												  jQuery("#mnhn-contact,.spam").css("opacity", 1);
												  jQuery("#contacts .loading").hide();
											  }else{
												jQuery("#mnhn-contact-form").submit();
										  }
									  }
								  	  
									});				
						  }		
		
						});
				
			
			
		});','inline');
  $form['#prefix'] = '
  		 <div class="page-header">      
                        <h1>Contact</h1>
                    </div>
                    <div class="page-detail-wrapper">
  						<div id="contacts">';
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  
  
  
  
  
  $form['objet'] = array(
    '#title' => t('Subject'),
    '#type' => 'select',
    '#options' => mnhn_content_objet(),
  );
  
 
  
  
  
  
  $form['prenom'] = array(
    '#prefix' => '<div class="clear"></div>',
    '#title' => t('First name'),
    '#type' => 'textfield',
  		'#required' => true,
  );
  
  $form['nom'] = array(
    '#title' => t('Last name'),
    '#type' => 'textfield',
  		'#required' => true,
  );
  
  
  $form['email'] = array(
    '#title' => t('Email'),
    '#type' => 'textfield',
  		'#required' => true,
    
  );
  
 
  
  
  $form['message'] = array(
    '#title' => t('Message'),
    '#type' => 'textarea',
    '#resizable' => FALSE,
  		'#required' => true,
  );
  
  
 
  
   $form['pj1'] = array( 
		    '#title' => t('Attached file'),
		    '#type' => 'file', 
		    '#required' => FALSE,
   			'#description' => 'format : .txt, .pdf, .rtf, .jpg - 10Mo max',	
	);
	
	
	
	 $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );

 $bloc = variable_get('mnhn_contact_bloc_'.$language->language, $defaults);
 
  $form['#suffix'] = '
  <div class="spam">
				<div class="spam_title">'.t('Spam block').' <span>*</span></div>
				<script type="text/javascript">
		 var RecaptchaOptions = {
		    theme : \'blackglass\',
 			lang : \''.$language->language.'\',
						
		 };
		 </script>
		<script type="text/javascript"
	     src="http://www.google.com/recaptcha/api/challenge?k='.CAPTCHA_PUBLIC.'">
	  </script>
	  <noscript>
	     <iframe src="http://www.google.com/recaptcha/api/noscript?k='.CAPTCHA_PUBLIC.'"
	         height="300" width="500" frameborder="0"></iframe><br>
	     <textarea name="recaptcha_challenge_field" rows="3" cols="40">
	     </textarea>
	     <input type="hidden" name="recaptcha_response_field"
	         value="manual_challenge">
	  </noscript>
			</div>
			<div class="clearfix"></div>
			<br/>
			<a href="javascript:;" class="link" id="contact_submit">'.t('Submit').'</a><div class="loading"></div>

			<br/><br/><span>*'.t('Required').'</span>
	     		</div>
  		<div class="bloc_contact">'.$bloc['value'].'</div>
  		</div>';		
  		

  return $form;
}




/**
 * Validatation Formulaire contact
 * 
 * @see mnhn_contact_form
 * 
 */
function mnhn_contact_form_validate($form, &$form_state) {
	/*
	$mail = $form_state['values']['mail'];
	if (!valid_email_address($mail)) {
	  form_set_error('mail', t('le format du courriel n\'est pas valide.'));
	}
	*/

		$i=1;
  	  $validators = array('file_validate_extensions' => array());
			  $file = file_save_upload('pj'.$i, $validators, 'public://contact/');
			  
			  if ($file) {
			  	$ext = substr(strtolower(strrchr(basename($file->filename), ".")),1);
			  	if($ext!='pdf' && $ext!='txt' && $ext!='rtf' && $ext!='jpg' && $ext!='jpeg'){
			  		form_set_error('pj'.$i, t('format de fichier non valide'));
			  	}else{	
			  		$file->status = FILE_STATUS_PERMANENT;
			 	 	file_save($file);
			   		$path=str_replace('public://','sites/default/files/',$file->uri);
			   		$form_state['values']['pj'.$i]=$path;
			   		
			  	}	
			  }
	
	
	
}



/**
 * Soumission Formulaire contact
 * 
 * @see mmnhn_contact_form
 * 
 */
function mnhn_contact_form_submit($form_id, $form_state) {
	
	$objet=$form_state['values']['objet'];
	$objets=mnhn_content_objet();
	


  $objets=mnhn_content_objet();	
  //print_r($form_state['values']);
  //exit;
  $to = variable_get('mnhn_contact_mail_'.$form_state['values']['objet'], '');
  
 
  
  
  $from = $form_state['values']['email'];
  $params = array();
  $params['objet']='Museum Contact : '.$objets[$form_state['values']['objet']];
  
  $output='Objet : '.$objets[$objet].'<br /> 
		Prenom : '.$form_state['values']['prenom'].'<br /> 
		Nom : '.$form_state['values']['nom'].'<br /> 
  		Message : '.nl2br($form_state['values']['message']);

  $params['message']=$output;
 
 
  if(!empty($form_state['values']['pj1'])){
  	$params['message'].='<br/><br/><a href="http://'.$_SERVER['SERVER_NAME'].'/'.$form_state['values']['pj1'].'">TÃ©lÃ©charger la piÃ¨ce jointe</a>';
  }
  

  
  $language = language_default();
  $send = TRUE;
  $result = drupal_mail('mnhn_contact', 'contact', $to, $language, $params, $from, $send);
  

  
  if ($result['result'] == TRUE) {
    drupal_set_message(t('Votre message a bien a Ã©tÃ© envoyÃ©.'));
  }
  else {
    drupal_set_message(t('Un problÃ¨me est survenu lors de l\'envoi du message.'), 'error');
  }	

  //drupal_goto("join");	  
	  
}



