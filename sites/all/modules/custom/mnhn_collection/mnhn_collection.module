<?php
// $Id$


///////////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////////
 


/**
 * Implementation of hook_menu().
 */
function mnhn_collection_menu() {
 	
	$items['objet/%'] = array(
	    'page callback' => 'mnhn_collection_objet_ajax',
		'page arguments' => array(1),
	    'access arguments' => array('access content'),
	    'type' => MENU_CALLBACK
	  );
	  
	  $items['ajax/marker/position/%'] = array(
	    'page callback' => 'mnhn_collection_marker_position',
		'page arguments' => array(3),
	    'access arguments' => array('access content'),
	    'type' => MENU_CALLBACK
	  );
	  
	  
  $items['node/%node/carte'] = array(
    'title' => 'Carte intéractive',
    'page callback' => 'mnhn_collection_carte',
    'page arguments' => array(1),
    'access callback' => 'mnhn_content_carte_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
	'weight' => 10,
  );
  
  
	
	 $items['admin/mhnh/Collection'] = array(
    'title' => 'Collection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nodeorder_admin_display_form','64'),
    'access arguments' => array('mnhn'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nodeorder.admin.inc',
   	'file path' => drupal_get_path('module', 'nodeorder'),
    'description' => 'Ré-ordonner',
     'weight' => 4,
  );
	 
	
 
  
   $items['admin/mhnh/Collection/Ordre'] = array(
    'title' => 'Ordre bloc Voyage dans les collections (Homepage)',
     'type' => MENU_DEFAULT_LOCAL_TASK,
     'weight' => -10,
  );
  
  $items['admin/mhnh/Collection/carte-interactive'] = array(
    'title' => 'Carte interactive',
    'page callback' => 'drupal_get_form',
   'page arguments' => array('mnhn_collection_admin_settings'),
    'access arguments' => array('mnhn'),
    'type' => MENU_LOCAL_TASK,
   'file' => 'mnhn_collection.admin.inc',
  );
  
  $items['admin/mhnh/Collection/lesueur'] = array(
  		'title' => 'Collection Lesueur',
  		'page callback' => 'drupal_get_form',
  		'page arguments' => array('mnhn_collection_lesueur_admin_settings'),
  		'access arguments' => array('mnhn'),
  		'type' => MENU_LOCAL_TASK,
  		'file' => 'mnhn_collection.admin.inc',
  );
  
 
 
  
   
  return $items;
}

/**
 * Implementation of hook_access().
 */
function mnhn_content_carte_access($node){
	global $user;
	if(array_key_exists(RID_EDITEUR,$user->roles) || array_key_exists(RID_ADMIN,$user->roles) || array_key_exists(RID_SUPERADMIN,$user->roles)){
		if($node->type=='collection'){
			return TRUE;
		}
	}	
}


/**
 * Implementation of hook_theme()
 */
function mnhn_collection_theme(){
	
	return array(
	
       'objet-teaser' => array(
			'variables' => array('nid' => NULL,'image' => NULL, 'title' => NULL, 'chapo' => NULL, 'ajax' => 0,'objet'=>0),
     		'template' => 'objet-teaser'),
	
	    'objet-legende' => array(
			'variables' => array('nid' => NULL,'image' => NULL, 'title' => NULL, 'chapo' => NULL, 'class' => NULL),
     		'template' => 'objet-legende'),
	
	   'menu-xl-item-collection' => array(
			'variables' => array('expositions' => NULL),
     		'template' => 'menu-xl-item-collection'),
	
		'menu-xl-item-collection-detail' => array(
			'variables' => array('image' => NULL,'link' => NULL,'title' => NULL),
     		'template' => 'menu-xl-item-collection-detail'),
	
	'collection_homepage' => array(
			'variables' => array('nid' => NULL,'t' => NULL,'image' => NULL, 'title' => NULL),
     		'template' => 'collection_homepage'),
	
	'carnet_homepage' => array(
			'variables' => array('nid' => NULL, 'title' => NULL, 'image' => NULL,),
     		'template' => 'carnet_homepage'),
	
	
	);	
	
}




///////////////////////////////////////////////////////////////////////////////////
// MENU XL
///////////////////////////////////////////////////////////////////////////////////



/*
 * 
 * MENU XL collection
 * 
 */
function mnhn_collection_oeuvres_commentees_menu_xl(){
	
	global $language;
	$sql = 'SELECT n.nid FROM node n
	INNER JOIN taxonomy_index t on t.nid=n.nid and t.tid=:tid and n.status=:status and n.language=:language order by t.weight asc';
	$result=db_query($sql,array(':tid' => TID_CLASSEMENT_COLLECTION,  ':status' => 1,  ':language' => $language->language));

	$output.='<div class="collection-menu-gallery">';
	$position=1;
	foreach($result as $row){
	
		$node=node_load($row->nid);
		//print_r($node);
		//exit;
		//$output.=$row->nid.'<br/>';
		
		
		$output.=theme('collection_menu_liste', array('node' => $node,'position' => $position));
		($position==3)? $position=1:$position++;
		
	}
	$output.='</div>';
	
	return $output;
	
	
	
}

/*
 *
* MENU XL collection item
* 
* @see mnhn_collection_oeuvres_commentees_menu_xl()
*
*/
function mnhn_collection_menu_xl(){
	
	global $language;
	$mlid_collection=constant("MLID_COLLECTION_".strtoupper($language->language));
	
	//$link=menu_link_load($mlid_collection);
	
	
	$menu_collection=menu_tree_all_data("menu-menu-principal");
	
	foreach($menu_collection as $item){
		if($item['link']['language']==$language->language && $item['link']['mlid']==$mlid_collection){
				
			
					foreach($item['below'] as $item_child){
						$vignette='';
						$uri='';
						$uri=variable_get('menu_image_'.$item_child['link']['mlid'],'');
						if(!empty($uri)){
							$vignette='<img src="'.file_create_url($uri).'" alt="" />';
						}
						$output.='<div class="item_collec">
				               <h3>'.$item_child['link']['link_title'].' '.$vignette.'</h3>';
								
								foreach($item_child['below'] as $item_child_child){
									//print_r($item_child);
									//exit;
									$title=$item_child_child['link']['link_title'];
									$link_collection=$language->language.'/'.drupal_get_path_alias($item_child_child['link']['link_path']);
									$uri_child=variable_get('menu_image_'.$item_child_child['link']['mlid'],'');
									$image='';
									if(!empty($uri_child)){
										$image=theme('image_style', array('style_name' => 'menu_collection', 'path' => $uri_child));
									}
									
									$output.=theme('menu-xl-item-collection-detail', array('image' => $image,'link' => $link_collection, 'title' => $title,));
									
								}			
								
					$output.='</div>';
					
				}
			
		}
   }
	
  
	return $output;
	
	
	
}


///////////////////////////////////////////////////////////////////////////////////
// COLLECTION
///////////////////////////////////////////////////////////////////////////////////

/*
 * 
 * Liste des objets
 * 
 */
function mnhn_collection_objets($nid){
	global $language;
	$sql = 'SELECT n.nid FROM node n
	INNER JOIN field_data_field_object_collection c 
	on c.entity_id=n.nid and n.language=:language
	and field_object_collection_nid=:nid
	and n.status=:status
	order by n.title asc';
	$result=db_query($sql,array(':language'=> $language->language,':nid'=> $nid,':status'=> 1));
	
	foreach($result as $row){
		$node=node_load($row->nid);
		$title=$node->field_object_titre['und'][0]['value'];
		if(empty($title)){
			$title=$node->title;
		}
				$chapo=$node->field_object_chapo['und'][0]['value'];
		$uri=$node->field_object_visuel['und'][0]['uri'];   
		if(!empty($uri)){
			$image=theme('image_style', array('style_name' => 'objet_vignette', 'path' => $uri));
		}else{
			$image='<img src="/'.drupal_get_path('theme','mnhn').'/pics/fonds/blank.png" width="109" height="80">';
		}
		
		$output.=theme('objet-teaser', array('nid'=> $node->nid,'image' => $image,'title'=> $title,'chapo'=> $chapo, 'ajax' => 1, 'objet'=>0));	
	}
	
	return $output;
}


/*
 *
* Légende des objets
*
*/
function mnhn_collection_objets_legende($nid){
	global $language;
	$sql = 'SELECT n.nid FROM node n
	INNER JOIN field_data_field_object_collection c 
	on c.entity_id=n.nid and n.language=:language
	and field_object_collection_nid=:nid
	and n.status=:status
	order by n.title asc';
	$result=db_query($sql,array(':language'=> $language->language,':nid'=> $nid,':status'=> 1));
	
	foreach($result as $row){
		$node=node_load($row->nid);
		$title=$node->field_object_titre['und'][0]['value'];
		if(empty($title)){
			$title=$node->title;
		}
		$chapo=$node->field_object_chapo['und'][0]['value'];
		$uri=$node->field_object_visuel_carte['und'][0]['uri'];
		$class='';   
		if(!empty($uri)){
			$image=theme('image_style', array('style_name' => 'objet_legende', 'path' => $uri));
		}else{
			$class='empty';
			$image='<img src="/'.drupal_get_path('theme','mnhn').'/pics/fonds/blank.png" width="53" height="53">';
		}
		
		$output.=theme('objet-legende', array('nid'=> $node->nid,'image' => $image,'title'=> $title,'chapo'=> $chapo, 'class' => $class));	
	}
	
	return $output;
}


/*
 *
* Nombre d'objet par collection
*
*/
function mnhn_collection_objets_nb($nid){
	global $language;
	$sql = 'SELECT count(*) FROM node n
	INNER JOIN field_data_field_object_collection c 
	on c.entity_id=n.nid and n.language=:language
	and field_object_collection_nid=:nid
	and n.status=:status';
	$total=db_query($sql,array(':language'=> $language->language,':nid'=> $nid,':status'=> 1))->fetchField();
	
	return $total;
}


/*
 *
* Test objet rattaché à une collection
*
*/
function mnhn_collection_objet_collection($nid){
	global $language;
	$sql = 'SELECT field_object_collection_nid FROM field_data_field_object_collection where entity_id=:nid';
	$nid=db_query($sql,array(':nid'=> $nid))->fetchField();
	if($nid>0){
		return $nid;
	}
}


/*
 *
* Chargement AJAX d'un objet
* 
* @param $nid
*
*/
function mnhn_collection_objet_ajax($nid){
	
	$node=node_load($nid);
	$output= drupal_render(node_view($node));
	
	print $output;
	
	
}



/*
 *
 * Vue node - Onglet carte
* Carte collection // Positionnement des objet
*
* @param $node
*
*/
function mnhn_collection_carte($node){

	drupal_add_js(drupal_get_path('theme','mnhn').'/js/libs/jquery.dragndrop.js');

	$url_visuel=file_create_url($node->field_collection_visuel['und'][0]['uri']);
	
	$tab_zone=$node->field_collection_zone['und'];
	 
		if(sizeof($tab_zone)>0){
	        $i=0;
	        foreach($tab_zone as $zone){
	        	 $class_fixed='';
	        	 $zone_position=variable_get('zone_'.$node->nid.'_'.$i, '0');
	        	 if($zone_position!=0){
	        	 	$class_fixed='fixed';
	        	 }
	             $liste_zone.= '<div class="edit_marker edit_marker_zone '.$class_fixed.'" rel="zone_'.$node->nid.'_'.$i.'" data-coords="'.$zone_position.'"><div class="handler">'.$zone['value'].'</div></div>';
	             $i++;
	        }
	       
	    }
	
	if(empty($url_visuel)){
		$output='<div class="wrapper_carte" style="width:1000px;height:300px;)"></div>';
	}else{
		$info_visuel=mnhn_content_get_image_info($url_visuel);
		
		$output='<div class="carte_position_save">Enregistrer les positions</div>';
		$output.='<div class="wrapper_carte" style="width:'.$info_visuel['largeur'].'px;height:'.$info_visuel['hauteur'].'px;background:url('.$url_visuel.')">';
	    $output.=$liste_zone; 
		$output.= mnhn_collection_objets_legende($node->nid);
		$output.='</div>';
		
	}
	
	drupal_add_js('
		jQuery(function() {
			jQuery(".edit_marker").Drags({
                handler: ".handler",
                onMove: function(e) {
                   //jQuery(".content").html("Div Position:(Left:" + e.pageX + " ,Top:" + e.pageY + ")");
                },
                onDrop:function(e){
                    //jQuery(".content").html("dropped!");
                    //alert("Div Position:(Left:" + e.pageX + " ,Top:" + e.pageY + ")");
                }
            });
            
            var left=20;
            var top=20;
            var largeur='.$info_visuel['largeur'].';
            var hauteur='.$info_visuel['largeur'].';
            
             jQuery(".edit_marker").each(function(e){
             
            	    if(left>(largeur-100)){
            	    	left=0;
            	    	top+=150;
            	    }
					if(jQuery(this).hasClass("fixed")){
						var position_fixed = jQuery(this).attr("data-coords").split(",");
						jQuery(this).css("left",position_fixed[0]+"px").css("top",position_fixed[1]+"px");
					}else{
	            	 	jQuery(this).css("left",left+"px").css("top",top+"px");
	            	 	left+=150;
	            	} 	
            	 	
            	 });
          
            
            jQuery(".carte_position_save").click(function(){
             var data_position = new Array();
            	 jQuery(".edit_marker").each(function(e){
            	   
            	 	var position = jQuery(this).position();
            	 	var id=jQuery(this).attr("rel");
            	 	var value=jQuery(this).attr("rel")+"-"+position.left+","+position.top;
            	 	data_position.push(value);
            	 	
            	 });
            	 
            	 jQuery.ajax({
						url: "/ajax/marker/position/'.$node->nid.'",
						type: "POST",
						data: { "tab[]" : data_position},
						success: function(data){
							alert("Les positions ont été sauvegardées");
						}
					});
            });

           
		});','inline');
	
	return $output;

  	
	
}

/*
 *
* Carte
* Enregistrement position objets
* 
* @param $nid
*
*/
function mnhn_collection_marker_position($nid){
	
	foreach($_POST['tab'] as $key => $value){
		$tab = explode("-", $value);
		variable_set($tab[0],$tab[1]);
	}

}

/*
 *
* Chargement de la carte
*
* @param $id
* @param $node
* @param small (fullsize)
*
*/
function mnhn_collection_load_carte($id,$node,$small=''){
	global $language;
	$filepath_carte=file_create_url($node->field_collection_visuel['und'][0]['uri']);
	if(empty($node->field_collection_visuel['und'][0]['uri'])){
		$filepath_carte='http://'.$_SERVER['SERVER_NAME'].'/sites/all/themes/mnhn/pics/fonds/carte_collection.png?'.rand(1, 10000);
		
	}
	
	if($small){
		$small='Small';
		$link_small='<a href="#craftmapzoom" class="link_carte">'.t('Zoom').'</a>';
	}else{
		$small="";
	}
	$output='<div id="'.$id.'">
				<img src="'.$filepath_carte.'?'.rand(1, 10000).'" class="imgMap'.$small.'" />';
								
							
		                            // Marqueurs invisible => zone 
		                            $tab_zone=$node->field_collection_zone['und'];    
		                            if(sizeof($tab_zone)>0){
		                            	$i=0;
		                            	foreach($tab_zone as $zone){
		                            	 	 $zone_position=variable_get('zone_'.$node->nid.'_'.$i, '0');
								        	 if($zone_position==0){
								        	 	$zone_position='-9999,-9999';
								        	 }
		                            		$liste_marker_zone.= '<div class="marker'.$i.' marker'.$small.'" id="marker_zone_'.$i.'" data-coords="'.$zone_position.'"></div>';
		                            		$i++;
		                            	}
		                            	$output.=$liste_marker_zone; 
		                            	
		                            }
		                           
                				
                			
                			$output.=mnhn_collection_objets_legende($node->nid);
							

                				

                				
                				
                            $output.='</div>';
                           
                            // Zone 
           
                            if(sizeof($tab_zone)>0){
                            	$i=0;
                            	foreach($tab_zone as $zone){
                            		$liste_zone.= '<a href="#" rel="marker_zone_'.$i.'">'.$zone['value'].'</a>';
                            		$i++;
                            	}
                            	$output.='<div class="controls'.$small.'">'.$liste_zone.'</div>'; 
                            }
                            
                            
                			

                            $bloc_schema = variable_get('mnhn_collection_txt_schema_'.$language->language, $defaults);
            				$output.=$link_small;
            				$output.='<a href="#" class="help"></a>
            				
            				<div class="text_help">
                                <h4>'.t('How to use this interactive map ?').'</h4>
                                '. $bloc_schema['value'].'
                                <a href="#" class="close_help">X '.t('Close').'</a>
            				</div>';
                        	
                        	
                        	return $output;
	
	
	
	
	
	
}



///////////////////////////////////////////////////////////////////////////////////
// PREPROCESS
///////////////////////////////////////////////////////////////////////////////////

/**
 * Override or insert variables into the page templates.
 *
 * @param $variables
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
/* -- Delete this line if you want to use this function */
function mnhn_collection_preprocess_html(&$variables, $hook) {

	if((arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='collection') ){
		$variables['classes_array'][] = "collection";

	}

	if((arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='object') ){
		$variables['classes_array'][] = "collection";
	}

	$variables['classes'] = implode(' ', $variables['classes_array']);

}

