<?php

///////////////////////////////////////////////////////////////////////////////////
// HOOKS
/////////////////////////////////////////////////////////////////////////////////// 


/**
 * Implementation of hook_menu()
 */
function mnhn_alerte_menu() {
/*
   $items['alerte'] = array(
    'title' => 'Alert',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_alerte_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
 */ 
  
  
   
  
  
 

  
  return $items;
}

/**
 * Implementation of hook_cron()
 *
 * Envoi planifié de l'alerte
 *
 */
function mnhn_alerte_cron(){

	 
	$sql = 'SELECT email,nom,message,nid,date from mnhn_alerte where statut=:status and date<:date';
	$result=db_query($sql,array(':status'=>0,':date'=>time()));
	foreach($result as $row){
		$nb_alerte++;

			
		$to = $row->email;
		$from = 'museemalraux@lehavre.fr';
		$params = array();
		$params['objet']='mnhn Le Havre : '.t('Alert event');
		$event=node_load($row->nid);
		$date_debut=$event->field_event_date['und'][0]['value'];
		$date_fin=$event->field_event_date['und'][0]['value2'];
		$params['message']=t('Event').' : '.l($event->title,'node/'.$event->nid).'<br/>';
		$params['message'].='Date : '.mnhn_content_format_date_medium($date_debut,$date_fin);;
		$params['message'].='<br/><br/>';
		$params['message'].=$row->message;
		$language = language_default();
		$send = TRUE;
		$result = drupal_mail('mnhn_alerte', 'alerte', $to, $language, $params, $from, $send);

		if ($result['result'] == TRUE) {
			$alerte_content.='Envoi alerte '.$row->email.' => '.l($event->title,'node/'.$row->nid).'<br/>';
		}else {
			$alerte_content.='Erreur envoi alerte '.$row->email.' => '.l($title,'node/'.$row->nid).'<br/>';
		}
			
		db_query('update mnhn_alerte set statut=1 where nid=:nid and email=:email and date=:date',array(':nid'=> $row->nid,':email'=> $row->email,':date'=> $row->date));
	}
		
		

	if($nb_alerte>0){
		watchdog('mnhn_alerte', $alerte_content);
	}
}


/**
 * Implementation of hook_mail()
 *
 * Envoi mail alerte
 *
 */
function mnhn_alerte_mail($key, &$message, $params) {
	global $user;

	// Each message is associated with a language, which may or may not be the
	// current user's selected language, depending on the type of e-mail being
	// sent. This $options array is used later in the t() calls for subject
	// and body to ensure the proper translation takes effect.
	$options = array(
			'langcode' => $message['language']->language,
	);

	switch ($key) {
		// Send a simple message from the contact form.
		case 'alerte':
			$message['subject'] = $params['objet'];
			// Note that the message body is an array, not a string.
			// Because this is just user-entered text, we do not need to translate it.

			// Since user-entered text may have unintentional HTML entities in it like
			// '<' or '>', we need to make sure these entities are properly escaped,
			// as the body will later be transformed from HTML to text, meaning
			// that a normal use of '<' will result in truncation of the message.
			$message['body'][] = $params['message'];
			break;
	}
}


///////////////////////////////////////////////////////////////////////////////////
// FORMULAIRE ALERTE EVENEMENT
///////////////////////////////////////////////////////////////////////////////////


/**
 * Formulaire Alerte événement
 *
 */
function mnhn_alerte_form() {
	
	drupal_add_js(drupal_get_path('theme','mnhn').'/js/jquery.realperson.min.js');
	drupal_add_css(drupal_get_path('theme','mnhn').'/css/jquery.realperson.css');
	
	drupal_add_js('
		jQuery(function() {
			
			jQuery("#defaultReal").realperson();
			jQuery(".realperson-regen").html("'.t('Regenerate the code').'");	
				
				
			jQuery(".section-alerte .link-alerte a").click(function(){
		//jQuery(" #mnhn-contact-form").submit();
		
		var error_miss=0;
		var error_wrong=0;
		var message_miss="";
		var message_wrong="";
		 jQuery(".section-alerte .loading").show();
		 jQuery("#mnhn-alerte-form,.spam").css("opacity", 0.5);
		 
		
		
		if(jQuery("#edit-email").val()==0){
			error_miss=1;
			message_miss+="- '.t('E-mail').'\n";
		}else{
			   var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
			   var address = jQuery("#edit-email").val();
			   if(reg.test(address) == false) {
				   	error_wrong=1;
					message_wrong+="'.t('Email field is wrong').'.\n"; 
			   }
			
		}	
			
		
		
		if(jQuery("#edit-message").val().length==0){
				error_miss=1;
				message_miss+="- '.t('Message').'\n";
		}
		
		
		
			
			var test_check=0;
			jQuery("#edit-type-alerte input").each(function(){
				if(jQuery(this).is(":checked")){
					test_check=1;
				}	
			});
			if(test_check==0){
				error_miss=1;
				message_miss+="- '.t('Kind of alert').'\n";
			}	
			
		
		
		
		  
		  jQuery.ajax({
			  url: "/blog/comment/captcha",
			  type: "POST",
			  data: {hash: jQuery("input.realperson-hash").val(),defaultReal:jQuery("#defaultReal").val()},
			  dataType: "html",
			  success: function(data){
			  
				  if(error_miss>0){
					  message_miss="'.t('The following fields are missing').' :\n"+message_miss;
				  }  
				  
				  if(data==0){
					  message_wrong+="'.t('Check the anti-spam code').'.\n";
					  jQuery(" #mnhn-alerte-form,.spam").css("opacity", 1);
					  
					  alert(message_miss+"\n"+message_wrong);
					  jQuery(".section-alerte .loading").hide();
				  }else{
					  if(error_wrong>0 || error_miss>0){
					  	 
						  jQuery(" #mnhn-alerte-form,.spam").css("opacity", 1);
						  
						  alert(message_miss+"\n"+message_wrong);
						  jQuery(".section-alerte .loading").hide();
					  }else{	  
						  jQuery(" #mnhn-alerte-form").submit();
					  }
				  }
			  }	  
		});				
		  
		
		
		
	});
		
			
			
				
				
				
				
				
				
				
				
			
		});','inline');

  
  
  $title=db_query('select title from node where nid=:nid',array(':nid'=>arg(1)))->fetchField();
  
   $form['email'] = array(
    '#prefix' => '<h1>'.t('Alerts').'</h1><br/><br/><div class="alerte_bloc">'.t('You have chosen to be alerted').' : '.l($title,'node/'.arg(1)).'<br/><br/>',
    '#title' => t('E-mail').'<span> * </span>',
    '#type' => 'textfield',
  );
 

  $form['message'] = array(
    '#prefix' =>  '<div id="bloc_message" class="bloc_autre">',
    '#title' => t('Your message').'<span> * </span>',
    '#type' => 'textarea',
    '#resizable' => FALSE,
  );
  
  	$event=node_load(arg(1));
 	$date_debut=$event->field_event_date['und'][0]['value'];
	$date_fin=$event->field_event_date['und'][0]['value2'];
	$options=array();
	if($date_debut>(time()+60*60*24*7)){
		$options['avant']=t('7 days before the beginning (of the manifestation)');
	}elseif($date_fin>(time()+60*60*24*7) && $date_debut!=$date_fin){
		$options['apres']=t('7 days before the end (of the manifestation )');
	}
  
  $form['type_alerte'] = array(
    '#prefix' => '<div class="type_alerte">'.t('Select your kind of alert').'</div>',
    '#type' => 'checkboxes',
    '#options' => $options,
    '#suffix' => '<span class="mentions">* '.t('Required fields').'</span></div>',
  );
  
  
	
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Envoyer'),
    '#suffix' => '</div>',
  );


  $form['#suffix'] = '
  <div class="spam">
		<div class="spam_title">'.t('Anti-spam device').' <span>*</span></div>
		<input id="defaultReal" type="text" name="defaultReal">
	</div>
	<div class="link-alerte"><a href="javascript:;">'.t('Send').'</a></div><div class="clear"></div><br/><br/>
	<div class="loading"></div>
  ';
  
  return $form;
}






function mnhn_alerte_format_date($date){
	if($date!=''){
	$d=substr($date,8,2);
	$m=substr($date,5,2);
	$y=substr($date,0,4);
	return $d.'/'.$m.'/'.$y;
	}
}

/**
 * Form submit
 * 
 * @see muma_alerte_form
 * 
 */
function mnhn_alerte_form_submit($form_id, $form_state) {
	
	
  $to = $form_state['values']['email'];
  $from = 'museemalraux@lehavre.fr';
  $params = array();
  $params['objet']='mnhn Le Havre : '.t('Alert event');
  $title=db_query('select title from node where nid=:nid',array(':nid'=>arg(1)))->fetchField();
  $params['message']=t('Vous avez choisi d’être alerté sur ').' : '.l($title,'node/'.arg(1)).'<br/>';
 	$event=node_load(arg(1));
 	$date_debut=$event->field_event_date['und'][0]['value'];
	$date_fin=$event->field_event_date['und'][0]['value2'];
	foreach($form_state['values']['type_alerte'] as $key => $value){
		
		if($key=='avant'){
			$timestamp_debut=$date_debut-(60*60*24*7);
			$params['message'].='- '.t('7 days before the beginning (of the manifestation)').'<br/>';
			db_query('insert into mnhn_alerte select :email,:nom,:message,:nid,0,:date',array('email'=>$form_state['values']['email'],'nom'=>'','message'=>$form_state['values']['message'],':nid'=>arg(1),':date'=>$timestamp_debut));
		}
		
		if($key=='apres'){
			$params['message'].='- '.t('7 days before the end (of the manifestation )').'<br/>';
			$timestamp_fin=$date_fin-(60*60*24*7);
			if($date_debut!=$date_fin){
				db_query('insert into mnhn_alerte select :email,:nom,:message,:nid,0,:date',array('email'=>$form_state['values']['email'],'nom'=>'','message'=>$form_state['values']['message'],':nid'=>arg(1),':date'=>$timestamp_fin));
			}
		}
	}

 
  $language = language_default();
  $send = TRUE;
  $result = drupal_mail('mnhn_alerte', 'alerte', $to, $language, $params, $from, $send);
  

  
  if ($result['result'] == TRUE) {
  	
  	$link_back=l(t('Back'),'node/'.arg(1));
    drupal_set_message('Votre demande d\'alerte a été enregistrée.<br/><br/>'.$link_back);
  }
  else {
    drupal_set_message(t('Un problème est survenu lors de l\'envoi du message.'), 'error');
  }	
	  
}






