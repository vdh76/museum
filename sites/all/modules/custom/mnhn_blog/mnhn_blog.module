<?php

define('VID_BLOG_CATEGORIE',7);
define('MLID_BLOG',536);
define('VID_BLOG_TAG',8);
// $Id$
/**
 * @file
 * Module mnhn_blog
 */


/*
 * ////////////////////////////////////////////////////////////////////////////////
 * 		HOOK 
 * ///////////////////////////////////////////////////////////////////////////////
 * 
 */

/**
* Implements hook_block_info().
*/
function mnhn_blog_block_info() {
  $blocks['blog_categories'] = array(
    'info' => t('Catégories Blog'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'weight' => 0,
    'visibility' => 1,
  );
  
   $blocks['blog_archives'] = array(
    'info' => t('Archives Blog'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'weight' => 0,
    'visibility' => 1,
  );
  
  $blocks['blog_search'] = array(
    'info' => t('Recherche Blog'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'weight' => 0,
    'visibility' => 1,
  );
  

  
 
 
  return $blocks;
}

/**
* Implements hook_block_view().
*/
function mnhn_blog_block_view($delta = '') {
  switch ($delta) {
  case 'blog_categories':
    //$block['subject'] = '';
    $block['content'] = mnhn_blog_categories();
    return $block;
     
  break;
  
   case 'blog_archives':
    //$block['subject'] = '';
    $block['content'] = mnhn_blog_archives();
    return $block;
    
     case 'blog_search':
    //$block['subject'] = '';
    $block['content'] = drupal_get_form('mnhn_blog_search_form');
    return $block;
     
  break;
  }
}

/**
 * Implementation of hook_menu()
 */
function mnhn_blog_menu() {

   $items['blog'] = array(
    'title' => 'Blog',
    'page callback' => 'mnhn_blog_list',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['blog/galerie-photos'] = array(
    'title' => 'Galerie photos',
    'page callback' => 'mnhn_blog_galerie_photos',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['blog/archives/%/%'] = array(
    'page callback' => 'mnhn_blog_list',
    'page arguments' => array(2,3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['blog/search/%'] = array(
    'title' => 'Recherche',
    'page callback' => 'mnhn_blog_list',
    'page arguments' => array('0','0',2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  $items['blog/%'] = array(
  		'page callback' => 'mnhn_blog_list',
  		'page arguments' => array('0','0','',1),
  		'access arguments' => array('access content'),
  		'type' => MENU_CALLBACK
  );

  $items['blog/comment/add/%'] = array(
    'page callback' => 'mnhn_blog_comment_add',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

    $items['blog/comment/delete/%'] = array(
    'page callback' => 'mnhn_blog_comment_delete',
    'page arguments' => array(3),
    'access arguments' => array('mnhn'),
    'type' => MENU_CALLBACK
  );

    $items['blog/comment/publish/%'] = array(
    		'page callback' => 'mnhn_blog_comment_publish',
    		'page arguments' => array(3),
    		'access arguments' => array('mnhn'),
    		'type' => MENU_CALLBACK
    );
  
 $items['blog/comment/captcha'] = array(
    'page callback' => 'mnhn_blog_captcha',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  
   $items['admin/mhnh/blog'] = array(
    'title' => 'Blog',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mnhn_blog_admin_settings'),
    'access arguments' => array('mnhn'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mnhn_blog_admin.inc',
    'description' => 'Blog',
    'weight' => 10,
  );

   $items['admin/mhnh/blog/flickr'] = array(
   		'title' => 'Flickr',
   		'type' => MENU_DEFAULT_LOCAL_TASK,
   		'weight' => -10,
   );

   $items['admin/mhnh/blog/comments'] = array(
   		'title' => 'Commentaires en attente',
   		'page callback' => 'mnhn_blog_admin_comment',
   		'access arguments' => array('mnhn'),
   		'type' => MENU_LOCAL_TASK,
   );
  return $items;
}

/**
 * Implementation of hook_theme()
 */
function mnhn_blog_theme() {
  return array(
     'blog_teaser' => array(
      'variables' => array('nid' => NULL,'title'=>NULL,'date'=>NULL,'image'=>NULL,'text'=>NULL),
      'template' => 'blog_teaser',
    ),
    
     'mnhn_blog' => array(
      'variables' => array('nid'=>NULL,'title'=>NULL,'share' => NULL, 'date'=> NULL, 'image'=>NULL,'description'=>NULL),
      'template' => 'mnhn_blog',
    ),
       
  );
}

/**
 * Implementation of hook_node_view().
 */
function mnhn_blog_node_view($node, $view_mode, $langcode) {
	if($node->type=='blog'){
		
		if(arg(0)=='node' || arg(0)=='taxonomy'){
			$breacrumb=array();
			$breacrumb[]=l('Accueil', '');
			$breacrumb[]=l('Le blog', 'blog');
			drupal_set_breadcrumb($breacrumb);
		}
	}
}

/**
 * Implementation of hook_taxonomy_term_presave()
 * 
 * Mise à jour Alias URL catégorie et tag Blog
 */
function mnhn_blog_taxonomy_term_presave($term){
	if($term->vid==VID_BLOG_CATEGORIE || $term->vid==VID_BLOG_TAG){
		module_load_include('inc', 'pathauto', 'pathauto');
		db_query('delete from url_alias where source=:source',array(':source' => 'blog/'.$term->tid));
		path_save($a = array('source' => 'blog/'.$term->tid, 'alias' => 'blog/'.pathauto_cleanstring($term->name), 'pid' => $pid, 'language'=>'fr'));
	}
}

/*
 * ////////////////////////////////////////////////////////////////////////////////
 * 		BLOG
 * ///////////////////////////////////////////////////////////////////////////////
 * 
 */

/**
 * Liste des post de blog
 *
 * @param $y => archive année
 * @param $m => archive mois
 * @param $search => recherche
 * @param $cat => catégorie
 *
 *
 */
function mnhn_blog_list($y=0,$m=0,$search='',$cat=0){
	
    setlocale(LC_ALL, 'fr_FR.utf8', 'fra');

	if($y>0){
		$start_date=mktime(0, 0, 0, $m, 1, $y);
		$end_date=mktime(0, 0, 0, $m+1, 1, $y);
		$breacrumb=array();
		$breacrumb[]=l('Accueil', '');
		$breacrumb[]=l('Le blog', 'blog');
		drupal_set_breadcrumb($breacrumb);
		drupal_set_title('Archives '.ucfirst(strftime('%B', $start_date)).' '.$y);
	}

	$query=db_select('node','n')->extend('PagerDefault');
	$query->fields('n',array('nid'));
	$query->innerJoin('field_data_field_blog_date', 'd', 'd.entity_id=n.nid');
	$query->innerJoin('field_data_field_blog_accroche', 'a', 'a.entity_id=n.nid');
	$query->condition('status',1);
	if($y>0){
		$query->condition('field_blog_date_value', $start_date, '>=');
		$query->condition('field_blog_date_value', $end_date, '<');
	}
	if(!empty($search)){
		$db_or = db_or();
	    $db_or->condition('n.title', '%' . db_like(strtolower($search)) . '%', 'LIKE');
	    $db_or->condition('a.field_blog_accroche_value', '%' . db_like(strtolower($search)) . '%', 'LIKE');
	    $query->condition($db_or);
		
	}
	if($cat>0){
		$query->innerJoin('taxonomy_index', 'ti', 'ti.nid=n.nid');
		$query->condition('ti.tid',$cat);
	}
	
	$query->orderBy('field_blog_date_value','DESC');
	$query->limit(5);
	$result=$query->execute();
	
	$i=0;
	foreach($result as $row){
		$i++;
		$node=node_load($row->nid);
		$output.=drupal_render(node_view($node, 'teaser'));
	}
	
	$output.='<div class="sommaire">'.theme('pager').'</div>';
	
	if(!empty($search)){
		$header_search='<h1 class="blog_search_title">Rechercher dans le blog</h1>';
		$header_search.='<div class="blog_result_search">';
		$header_search.='Votre recherche <em>'.$search.'</em> : '.$i.' résultat(s)';
		$header_search.='</div>';
		$output=$header_search.$output;
	}	
	return $output;
}


/**
 * Liste des catégories + Tags
 * Bloc colonne gauche
 *
 */
function mnhn_blog_categories(){
	$sql = 'SELECT td.tid,td.name,count(n.nid) as total FROM taxonomy_term_data td
	INNER JOIN taxonomy_index ti on ti.tid=td.tid and td.vid=:vid
	INNER JOIN node n on n.nid=ti.nid and n.status=:status and td.vid=:vid
	group by td.tid
	order by total desc';
	$result=db_query($sql,array(':vid' => VID_BLOG_CATEGORIE,':status' => 1 ));
	
	if(arg(0)=='blog'){
		//$tid=mnhn_content_get_tid(arg(1),VID_BLOG_CATEGORIE);
		$tid=arg(1);
	}
	
	foreach($result as $row){
		($row->tid==$tid)? $class_active='activ': $class_active='';
		
		if($row->total>0){
			$list['items'][]=array('data'=> '<span class="direct"><a href="/'.drupal_get_path_alias('blog/'.$row->tid).'">'.$row->name.' ('.$row->total.')</a></span>','class'=>$class_active);
		}
	}
	$list['title']='Catégories';
	$list['attributes']['class']='menu-vertical';
	
	$output=theme('item_list', $list);
	
	$nb_tags=db_query('select count(*) from taxonomy_term_data td
	INNER JOIN taxonomy_index ti on ti.tid=td.tid and td.vid=:vid
	INNER JOIN node n on n.nid=ti.nid and n.status=:status',array(':vid'=> VID_BLOG_TAG,':status'=>1))->fetchField();
	
	if($nb_tags>0){
		
		$sql='select td.tid,td.name from taxonomy_term_data td
		INNER JOIN taxonomy_index ti on ti.tid=td.tid and td.vid=:vid
		INNER JOIN node n on n.nid=ti.nid and n.status=:status order by td.name';
		
		$result=db_query($sql,array(':vid'=> VID_BLOG_TAG,':status'=>1));
		foreach($result as $row){
			($row->tid==$tid)? $selected='selected="selected"': $selected='';
			$select_tag.='<option value="/'.drupal_get_path_alias('blog/'.$row->tid).'" '.$selected.'>'.$row->name.'</option>';	
		}
		$output.='<div class="select_box"><select name="tags" id="tags" size="1" class="select_blog"><option value="default" selected="selected">Plus de tags...</option>'.$select_tag.'</select></div>';
	}
	return $output;
}

/**
 * Liste des archives
 * Bloc colonne gauche
 *
 */
function mnhn_blog_archives(){
	
	setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	
	$sql='SELECT n.nid as nid,
	b.field_blog_date_value as date
	from node n
	INNER JOIN field_data_field_blog_date b on n.nid=b.entity_id and n.status=:status
	ORDER by b.field_blog_date_value desc';
	
	$result=db_query($sql,array(':status' => 1 ));
	

	$i=0;
	$periode_old='';
	$class_active='';
	foreach($result as $row){
		
		$m=date('m',$row->date);
		$y=date('Y',$row->date);
		
		if(($y.'-'.$m)!=$periode_old){
			$i++;
			if(arg(2)==$y && arg(3)==$m){
				$class_active='activ';
			}else{
				$class_active='';
			}
			$start_date=mktime(0, 0, 0, $m, 1, $y);
			$end_date=mktime(0, 0, 0, $m+1, 1, $y);
			
			
			$sql_count = 'SELECT count(*) FROM node n
				INNER JOIN field_data_field_blog_date b on n.nid=b.entity_id and n.status=:status
				and b.field_blog_date_value>=:start_date and b.field_blog_date_value<:end_date';
				$nb_post=db_query($sql_count,array(':status' => 1,':start_date' => $start_date,':end_date' => $end_date))->fetchField();
			
			if($i<4){
				$list['items'][]=array('data'=> '<span class="direct"><a href="/blog/archives/'.$y.'/'.$m.'">'.ucfirst(strftime('%B', $row->date)).' '.$y.' ('.$nb_post.')</a></span>','class' => $class_active);
			}else{
				$archives++;
				$select_old.='<option value="/blog/archives/'.$y.'/'.$m.'">'.ucfirst(strftime('%B', $row->date)).' '.$y.' ('.$nb_post.')</option>';
			}
		}
		$periode_old=$y.'-'.$m;
		
	}
	
	$list['title']='Archives';
	$list['attributes']['class']='menu-vertical';
	$output=theme('item_list', $list);
	
	if($archives>0){
		
		$output.='<div class="select_box"><select name="tags" id="archives" size="1" class="select_blog"><option value="default" selected="selected">Archives plus anciennes...</option>'.$select_old.'</select></div><div style="height:5px"></div>';
	}else{
		$output.='<div style="height:5px"></div>';
	}
	
	return $output;
	
}

/*
 * Intégration Module Flickr
 * Menu Blog
 * 
 * 
 */
function mnhn_blog_galerie_photos(){

	$output='<div class="post">
	   <div class="entete">
	       <h2 class="entry-title">Galerie Photos</h2>
	  </div>
	  <p class="chapo"></p>';
	$output.=variable_get('mnhn_blog_flickr', '');
	$output.='</div>';


	return $output;
}

/**
 * Liste des commentaires
 * rattachés à un post
 *
 * @param $nid
 *
 */
function mnhn_blog_comment_list($nid){
	
	setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	global $user;
	$sql='SELECT cid,date,author,content from mnhn_comment where valid=:valid and nid=:nid order by date desc';
	$result=db_query($sql,array(':valid' => 1,':nid' => $nid ));
	
	$i=0;
	foreach($result as $row){
		
		($i%2==0)?$class='even':$class='odd';
		if($user->uid>0){
			$action='<div class="action" rel="'.$row->cid.'">Supprimer</div>';
		}else{
			$action='';
		}
		$date=date('d',$row->date).' '.ucfirst(strftime('%B', $row->date)).' '.date('Y',$row->date).' à '.date('H:i',$row->date);
		$output.='
		 <div class="comment '.$class.'">
		 '.$action.'
             <h4>Par '.$row->author.' le '.$date.'</h4>
             <p>'.nl2br($row->content).'</p>
         </div>';
		$i++;
	}
	return $output;
}

/**
 * Nombre commentaire rattaché à un post
 * rattachés à un post
 *
 * @param $nid
 *
 */
function mnhn_blog_comment_nb($nid){
	
	$sql='SELECT count(*) from mnhn_comment where valid=:valid and nid=:nid';
	$nb=db_query($sql,array(':valid' => 1,':nid' => $nid ))->fetchField();
	if($nb==0 || $nb==1){
		$libelle=' commentaire';
	}else{
		$libelle=' commentaires';
	}
	return '<span>'.$nb.'</span>'.$libelle;
}

function mnhn_blog_captcha(){
	
	if (rpHash(trim($_POST['defaultReal'])) == trim($_POST['hash'])) {
		print '1';
	}else{
		print '0';
	}
	
}

/**
 * Traitement Ajout d'un commentaire
 * rattachés à un post
 *
 * @param $id => $nid post
 *
 */
function mnhn_blog_comment_add($id){
	setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	$nom=strip_tags($_POST['nom']);
	$commentaire=strip_tags($_POST['commentaire']);
	
	$nid=str_replace('blog_','',$id);
	$date=date('d').' '.ucfirst(strftime('%B')).' '.date('Y').' à '.date('H:i');
	
	db_query('insert into mnhn_comment
	select null,:nid,:nom,:commentaire,:date,0',array(':nid' => $nid,':nom' => $nom,':commentaire' => $commentaire,':date'=> time()));
	
	print '
	<div class="comment odd">
		<h4>Par '.$nom.' le '.$date.'</h4>
		<p>'.nl2br($commentaire).'</p>
	</div>';
}

/**
 * BO en attente de validation
 * Suppression d'un commentaire
 * rattachés à un post
 *
 * @param $cid
 *
 */
function mnhn_blog_comment_delete($cid){
	db_query('delete from mnhn_comment where cid=:cid',array(':cid' => $cid));		
}

function rpHash($value) { 
    $hash = 5381; 
    $value = strtoupper($value); 
   // print '--'.$value.'--<br/>';
    for($i = 0; $i < strlen($value); $i++) { 
        $hash = (leftShift32($hash, 5) + $hash) + ord(substr($value, $i));
       // print $hash.'<br>'; 
    } 
    return $hash; 
} 

function leftShift32($number, $steps) { 
    // convert to binary (string) 
    $binary = decbin($number); 
    // left-pad with 0's if necessary 
    $binary = str_pad($binary, 32, "0", STR_PAD_LEFT); 
    // left shift manually 
    $binary = $binary.str_repeat("0", $steps); 
    // get the last 32 bits 
    $binary = substr($binary, strlen($binary) - 32); 
    // if it's a positive number return it 
    // otherwise return the 2's complement 
    return ($binary{0} == "0" ? bindec($binary) : 
        -(pow(2, 31) - bindec(substr($binary, 1)))); 
} 

function mnhn_blog_form_alter(&$form, &$form_state, $form_id) {
	
  	unset($form['options']['sticky']);
	unset($form['revision_information']);
	unset($form['author']);
	
      switch($form_id){
    	case 'mnhn_blog_search_form':
    		$form['content']['#attributes'] = array('class' => array('text'));
    		break;
      }	
}

/**
 * Formulaire recherche
 *
 */
function mnhn_blog_search_form(){
	
  $form['content'] = array(
  '#title' => 'Rechercher dans le blog',
  '#type' => 'textfield',
  '#size' => '18',
  '#maxlength' => '132',
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('OK')
  );
  
  return $form;
}

/**
 * Handle post-validation form submission.
 */
function mnhn_blog_search_form_submit($form_id, $form_state) {
	
  $search = $form_state['values']['content'];
  $search=strip_tags($search);
  drupal_goto("blog/search/".$search);	  
	  
}

///////////////////////////////////////////////////////////////////////////////////
// BACKOFFICE
///////////////////////////////////////////////////////////////////////////////////

/**
 * Liste des commentaires en attente de validation
 *
 * @see muma_blog_search_form
 */
function mnhn_blog_admin_comment(){
	setlocale(LC_ALL, 'fr_FR.utf8', 'fra');
	global $user;

	$sql='SELECT c.cid,c.nid,c.date,c.author,c.content,n.title
	from mnhn_comment c
	INNER JOIN node n on n.nid=c.nid
	where c.valid=:valid order by date desc';
	$result=db_query($sql,array(':valid' => 0 ));
	$output='';
	$i=0;
	$table_header;
	foreach($result as $row){

		$date=date('d',$row->date).' '.ucfirst(strftime('%B', $row->date)).' '.date('Y',$row->date).' à '.date('H:i',$row->date);
		$output.='<div class="comment">
		<h3>'.$row->title.'</h3>
			<div class="author"><i>Par '.$row->author.' le '.$date.'</i></div>
			<div class="message">'.nl2br($row->content).'</div>
			<a href="javascript:;" class="publish" rel="'.$row->cid.'">publier</a> - <a href="javascript:;" class="delete" rel="'.$row->cid.'">supprimer</a>
			</br></br>
		</div>';
		$i++;
	}


	return $output;
}

/**
 * BO en attente de validation
 * Publication d'un commentaire
 * rattachés à un post
 *
 * @param $cid
 *
 */
function mnhn_blog_comment_publish($cid){
	db_query('update mnhn_comment set valid=1 where cid=:cid',array(':cid' => $cid));
}

///////////////////////////////////////////////////////////////////////////////////
// PREPROCESS
///////////////////////////////////////////////////////////////////////////////////

/**
 * Override or insert variables into the page templates.
 *
 * @param $vars
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
function mnhn_blog_preprocess_page(&$vars, $hook) {

	if(
	(arg(0)=='blog') 
	||
	(arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='blog' && arg(2)=='')
	||
	(arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='page_blog' && arg(2)=='')
	||
	(arg(0)=='taxonomy' && mnhn_content_get_vid(arg(2))==VID_BLOG_CATEGORIE)
	||
	(arg(0)=='taxonomy' && mnhn_content_get_vid(arg(2))==VID_BLOG_TAG)
	){
		drupal_add_js(drupal_get_path('theme','mnhn').'/js/blog.js');	
	}
}	

/**
 * Override or insert variables into the html templates.
 *
 * @param $vars
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
function mnhn_blog_preprocess_html(&$vars) {

	if(
	(arg(0)=='node' && arg(1)>0 && mnhn_content_get_content_type(arg(1))=='blog')
	||
	(arg(0)=='node' && mnhn_content_get_content_type(arg(1))=='page_blog' && arg(2)=='')
	||
	(arg(0)=='blog')
	||
	(arg(0)=='taxonomy' && mnhn_content_get_vid(arg(2))==VID_BLOG_CATEGORIE)
	||
	(arg(0)=='taxonomy' && mnhn_content_get_vid(arg(2))==VID_BLOG_TAG)
	){
		$vars['classes_array'][] = 'blog';
		$vars['classes_array'][] = 'museum';
	}
	
	$vars['classes'] = implode(' ', $vars['classes_array']);
}
